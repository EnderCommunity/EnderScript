STRING(Test 1!)<1>
?(;)<2>
STRING(Test 2!)<3>
?(;)<4>
group_declarator()<5>
IDENTIFIER(AnotherLibrary)<6>
?({)<7>
class_declarator()<8>
IDENTIFIER(MyClass)<9>
?({)<10>
function_declarator()<11>
?(:)<12>
?(:)<13>
type_specifier(int)<14>
IDENTIFIER(NumOne)<15>
?(()<16>
?())<17>
?({)<18>
IDENTIFIER(return)<19>
NUMBER(1)<20>
?(;)<21>
?(})<22>
?(})<23>
?(})<24>
state_specifier(public)<25>
group_declarator()<26>
IDENTIFIER(LibFilNam)<27>
?({)<28>
state_specifier(public)<29>
class_declarator()<30>
IDENTIFIER(section)<31>
?({)<32>
function_declarator()<33>
?(:)<34>
?(:)<35>
type_specifier(string)<36>
IDENTIFIER(myFunction)<37>
?(()<38>
type_specifier(int)<39>
IDENTIFIER(input)<40>
?())<41>
?({)<42>
type_specifier(string)<43>
IDENTIFIER(output)<44>
?(;)<45>
ZONE_LINE(0;)<46>
IDENTIFIER(return)<47>
IDENTIFIER(output)<48>
?(;)<49>
?(})<50>
?(})<51>
?(})<52>
IDENTIFIER(define)<53>
IDENTIFIER(ZERO)<54>
NUMBER(0)<55>
?(;)<56>
IDENTIFIER(setsize)<57>
type_specifier(int)<58>
NUMBER(2)<59>
?(;)<60>
IDENTIFIER(setsize)<61>
type_specifier(double)<62>
NUMBER(10)<63>
?(;)<64>
state_specifier(public)<65>
group_declarator()<66>
IDENTIFIER(FinalPitch)<67>
?({)<68>
state_specifier(public)<69>
class_declarator()<70>
IDENTIFIER(Program)<71>
?({)<72>
type_specifier(int)<73>
IDENTIFIER(globA)<74>
assignment_operator()<75>
NUMBER(0)<76>
?(;)<77>
type_specifier(double)<78>
IDENTIFIER(globB)<79>
assignment_operator()<80>
NUMBER(0.0)<81>
?(;)<82>
IDENTIFIER(float)<83>
IDENTIFIER(globC)<84>
assignment_operator()<85>
NUMBER(0.0)<86>
?(;)<87>
type_specifier(char)<88>
IDENTIFIER(globD)<89>
assignment_operator()<90>
CHAR(D)<91>
?(;)<92>
type_specifier(string)<93>
IDENTIFIER(globE)<94>
assignment_operator()<95>
STRING(Global E)<96>
?(;)<97>
type_specifier(bool)<98>
IDENTIFIER(globF)<99>
assignment_operator()<100>
BOOLEAN(true)<101>
?(;)<102>
type_specifier(file)<103>
IDENTIFIER(globG)<104>
assignment_operator()<105>
IDENTIFIER(new)<106>
IDENTIFIER(FileStream)<107>
?(()<108>
STRING(path/to/my/file.txt)<109>
?())<110>
?(;)<111>
state_specifier(public)<112>
function_declarator()<113>
?(:)<114>
?(:)<115>
type_specifier(int)<116>
IDENTIFIER(Main)<117>
?(()<118>
type_specifier(string)<119>
?([)<120>
?(])<121>
IDENTIFIER(envi)<122>
?(,)<123>
type_specifier(int)<124>
IDENTIFIER(length)<125>
?())<126>
?({)<127>
IDENTIFIER(Func)<128>
?(()<129>
?())<130>
?(;)<131>
?(^)<132>
type_specifier(int)<133>
IDENTIFIER(a)<134>
assignment_operator()<135>
NUMBER(0)<136>
?(;)<137>
type_specifier(int)<138>
IDENTIFIER(b)<139>
assignment_operator()<140>
NUMBER(1)<141>
?(;)<142>
?(^)<143>
type_specifier(int)<144>
IDENTIFIER(c)<145>
assignment_operator()<146>
IDENTIFIER(Test)<147>
?(()<148>
IDENTIFIER(a)<149>
?(,)<150>
NUMBER(1)<151>
?())<152>
?(;)<153>
IDENTIFIER(a)<154>
?(,)<155>
IDENTIFIER(c)<156>
assignment_operator()<157>
NUMBER(5)<158>
?(;)<159>
IDENTIFIER(PlusOne)<160>
?(()<161>
IDENTIFIER(ref)<162>
IDENTIFIER(b)<163>
?())<164>
?(()<165>
IDENTIFIER(ref)<166>
IDENTIFIER(b)<167>
?())<168>
?(;)<169>
type_specifier(bool)<170>
IDENTIFIER(myTest)<171>
assignment_operator()<172>
BOOLEAN(false)<173>
?(;)<174>
IDENTIFIER(if)<175>
?(()<176>
IDENTIFIER(myTest)<177>
comparison_operator()<178>
BOOLEAN(true)<180>
?())<181>
?({)<182>
?(})<183>
IDENTIFIER(return)<184>
NUMBER(0)<185>
?(;)<186>
?(})<187>
state_specifier(private)<188>
function_declarator()<189>
?(:)<190>
?(:)<191>
IDENTIFIER(void)<192>
IDENTIFIER(Func)<193>
?(()<194>
?())<195>
?({)<196>
?(})<197>
state_specifier(public)<198>
function_declarator()<199>
?(:)<200>
?(:)<201>
?(^)<202>
type_specifier(int)<203>
IDENTIFIER(Test)<204>
?(()<205>
?(^)<206>
type_specifier(int)<207>
IDENTIFIER(a)<208>
?(,)<209>
type_specifier(int)<210>
IDENTIFIER(b)<211>
?())<212>
?({)<213>
IDENTIFIER(a)<214>
assignment_operator()<215>
?(()<216>
?(^)<217>
type_specifier(int)<218>
?())<219>
IDENTIFIER(b)<220>
?(;)<221>
IDENTIFIER(return)<222>
IDENTIFIER(a)<223>
?(;)<224>
?(})<225>
state_specifier(public)<226>
function_declarator()<227>
?(:)<228>
?(:)<229>
IDENTIFIER(void)<230>
IDENTIFIER(PlusOne)<231>
?(()<232>
IDENTIFIER(ref)<233>
type_specifier(int)<234>
IDENTIFIER(a)<235>
?())<236>
?({)<237>
IDENTIFIER(a)<238>
?(+)<239>
?(+)<240>
?(;)<241>
?(})<242>
?(})<243>
state_specifier(public)<244>
class_declarator()<245>
IDENTIFIER(AnotherClass)<246>
?({)<247>
state_specifier(public)<248>
type_specifier(int)<249>
IDENTIFIER(a)<250>
assignment_operator()<251>
NUMBER(0)<252>
?(;)<253>
state_specifier(private)<254>
type_specifier(int)<255>
IDENTIFIER(b)<256>
assignment_operator()<257>
NUMBER(0)<258>
?(;)<259>
function_declarator()<260>
?(:)<261>
?(:)<262>
IDENTIFIER(constructor)<263>
?(()<264>
type_specifier(int)<265>
IDENTIFIER(a)<266>
?(,)<267>
type_specifier(int)<268>
IDENTIFIER(b)<269>
?())<270>
?({)<271>
IDENTIFIER(this)<272>
?(.)<273>
IDENTIFIER(a)<274>
assignment_operator()<275>
IDENTIFIER(a)<276>
?(;)<277>
IDENTIFIER(this)<278>
?(.)<279>
IDENTIFIER(b)<280>
assignment_operator()<281>
IDENTIFIER(b)<282>
?(;)<283>
?(})<284>
?(})<285>
class_declarator()<286>
IDENTIFIER(Smth)<287>
?({)<288>
?(})<289>
?(})<290>
