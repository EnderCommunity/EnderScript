STRING(Test 1!)<1>
end_operator()<2>
STRING(Test 2!)<3>
end_operator()<4>
group_declarator()<5>
IDENTIFIER(AnotherLibrary)<6>
zone_operator({)<7>
class_declarator()<8>
IDENTIFIER(MyClass)<9>
zone_operator({)<10>
function_declarator()<11>
return_type_operator()<12>
type_specifier(int)<14>
IDENTIFIER(NumOne)<15>
parentheses_operator(()<16>
parentheses_operator())<17>
zone_operator({)<18>
return_statement()<19>
NUMBER(1)<20>
end_operator()<21>
zone_operator(})<22>
zone_operator(})<23>
zone_operator(})<24>
state_specifier(public)<25>
group_declarator()<26>
IDENTIFIER(LibFilNam)<27>
zone_operator({)<28>
state_specifier(public)<29>
class_declarator()<30>
IDENTIFIER(section)<31>
zone_operator({)<32>
function_declarator()<33>
return_type_operator()<34>
type_specifier(string)<36>
IDENTIFIER(myFunction)<37>
parentheses_operator(()<38>
type_specifier(int)<39>
IDENTIFIER(input)<40>
parentheses_operator())<41>
zone_operator({)<42>
type_specifier(string)<43>
IDENTIFIER(output)<44>
end_operator()<45>
ZONE_LINE(0;)<46>
return_statement()<47>
IDENTIFIER(output)<48>
end_operator()<49>
zone_operator(})<50>
zone_operator(})<51>
zone_operator(})<52>
IDENTIFIER(define)<53>
IDENTIFIER(ZERO)<54>
NUMBER(0)<55>
end_operator()<56>
IDENTIFIER(setsize)<57>
type_specifier(int)<58>
NUMBER(2)<59>
end_operator()<60>
IDENTIFIER(setsize)<61>
type_specifier(double)<62>
NUMBER(10)<63>
end_operator()<64>
state_specifier(public)<65>
group_declarator()<66>
IDENTIFIER(FinalPitch)<67>
zone_operator({)<68>
state_specifier(public)<69>
class_declarator()<70>
IDENTIFIER(Program)<71>
zone_operator({)<72>
type_specifier(int)<73>
IDENTIFIER(globA)<74>
assignment_operator(=)<75>
NUMBER(0)<76>
end_operator()<77>
type_specifier(double)<78>
IDENTIFIER(globB)<79>
assignment_operator(=)<80>
NUMBER(0.0)<81>
end_operator()<82>
IDENTIFIER(float)<83>
IDENTIFIER(globC)<84>
assignment_operator(=)<85>
NUMBER(0.0)<86>
end_operator()<87>
type_specifier(char)<88>
IDENTIFIER(globD)<89>
assignment_operator(=)<90>
CHAR(D)<91>
end_operator()<92>
type_specifier(string)<93>
IDENTIFIER(globE)<94>
assignment_operator(=)<95>
STRING(Global E)<96>
end_operator()<97>
type_specifier(bool)<98>
IDENTIFIER(globF)<99>
assignment_operator(=)<100>
BOOLEAN(true)<101>
end_operator()<102>
type_specifier(file)<103>
IDENTIFIER(globG)<104>
assignment_operator(=)<105>
IDENTIFIER(new)<106>
IDENTIFIER(FileStream)<107>
parentheses_operator(()<108>
STRING(path/to/my/file.txt)<109>
parentheses_operator())<110>
end_operator()<111>
type_specifier(hex)<112>
IDENTIFIER(globH)<113>
assignment_operator(=)<114>
HEX(FF)<115>
end_operator()<116>
state_specifier(public)<117>
function_declarator()<118>
return_type_operator()<119>
type_specifier(int)<121>
IDENTIFIER(Main)<122>
parentheses_operator(()<123>
type_specifier(string)<124>
array_operator([)<125>
array_operator(])<126>
IDENTIFIER(envi)<127>
separation_operator()<128>
type_specifier(int)<129>
IDENTIFIER(length)<130>
parentheses_operator())<131>
zone_operator({)<132>
IDENTIFIER(Func)<133>
parentheses_operator(()<134>
parentheses_operator())<135>
end_operator()<136>
elevational_operator()<137>
type_specifier(int)<138>
IDENTIFIER(a)<139>
assignment_operator(=)<140>
NUMBER(0)<141>
end_operator()<142>
type_specifier(int)<143>
IDENTIFIER(b)<144>
assignment_operator(=)<145>
NUMBER(1)<146>
end_operator()<147>
elevational_operator()<148>
type_specifier(int)<149>
IDENTIFIER(c)<150>
assignment_operator(=)<151>
IDENTIFIER(Test)<152>
parentheses_operator(()<153>
IDENTIFIER(a)<154>
separation_operator()<155>
NUMBER(1)<156>
parentheses_operator())<157>
end_operator()<158>
IDENTIFIER(a)<159>
separation_operator()<160>
IDENTIFIER(c)<161>
assignment_operator(=)<162>
NUMBER(5)<163>
end_operator()<164>
IDENTIFIER(PlusOne)<165>
parentheses_operator(()<166>
ref_statement()<167>
IDENTIFIER(b)<168>
parentheses_operator())<169>
parentheses_operator(()<170>
ref_statement()<171>
IDENTIFIER(b)<172>
parentheses_operator())<173>
end_operator()<174>
type_specifier(bool)<175>
IDENTIFIER(myTest)<176>
assignment_operator(=)<177>
BOOLEAN(false)<178>
end_operator()<179>
IDENTIFIER(if)<180>
parentheses_operator(()<181>
IDENTIFIER(myTest)<182>
comparison_operator(=)<183>
BOOLEAN(true)<185>
parentheses_operator())<186>
zone_operator({)<187>
zone_operator(})<188>
IDENTIFIER(if)<189>
parentheses_operator(()<190>
IDENTIFIER(myTest)<191>
comparison_operator(!)<192>
BOOLEAN(true)<194>
parentheses_operator())<195>
zone_operator({)<196>
zone_operator(})<197>
IDENTIFIER(if)<198>
parentheses_operator(()<199>
NUMBER(1)<200>
comparison_operator(>)<201>
NUMBER(5)<203>
comparison_operator(|)<204>
NUMBER(1)<206>
comparison_operator(~>)<207>
NUMBER(5)<208>
comparison_operator(|)<209>
parentheses_operator(()<211>
NUMBER(1)<212>
comparison_operator(~>)<213>
NUMBER(1)<214>
comparison_operator(&)<215>
NUMBER(1)<217>
comparison_operator(~<)<218>
NUMBER(1)<219>
parentheses_operator())<220>
parentheses_operator())<221>
zone_operator({)<222>
zone_operator(})<223>
IDENTIFIER(if)<224>
parentheses_operator(()<225>
NUMBER(1)<226>
comparison_operator(<)<227>
NUMBER(5)<229>
comparison_operator(|)<230>
NUMBER(1)<232>
comparison_operator(~<)<233>
NUMBER(5)<234>
parentheses_operator())<235>
zone_operator({)<236>
zone_operator(})<237>
return_statement()<238>
NUMBER(0)<239>
end_operator()<240>
zone_operator(})<241>
state_specifier(private)<242>
function_declarator()<243>
return_type_operator()<244>
type_specifier(void)<246>
IDENTIFIER(Func)<247>
parentheses_operator(()<248>
parentheses_operator())<249>
zone_operator({)<250>
zone_operator(})<251>
state_specifier(public)<252>
function_declarator()<253>
return_type_operator()<254>
elevational_operator()<256>
type_specifier(int)<257>
IDENTIFIER(Test)<258>
parentheses_operator(()<259>
elevational_operator()<260>
type_specifier(int)<261>
IDENTIFIER(a)<262>
separation_operator()<263>
type_specifier(int)<264>
IDENTIFIER(b)<265>
parentheses_operator())<266>
zone_operator({)<267>
IDENTIFIER(a)<268>
assignment_operator(=)<269>
parentheses_operator(()<270>
elevational_operator()<271>
type_specifier(int)<272>
parentheses_operator())<273>
IDENTIFIER(b)<274>
end_operator()<275>
return_statement()<276>
IDENTIFIER(a)<277>
end_operator()<278>
zone_operator(})<279>
state_specifier(public)<280>
function_declarator()<281>
return_type_operator()<282>
type_specifier(void)<284>
IDENTIFIER(PlusOne)<285>
parentheses_operator(()<286>
ref_statement()<287>
type_specifier(int)<288>
IDENTIFIER(a)<289>
parentheses_operator())<290>
zone_operator({)<291>
IDENTIFIER(a)<292>
assignment_short_operator(+)<293>
end_operator()<295>
zone_operator(})<296>
state_specifier(public)<297>
function_declarator()<298>
return_type_operator()<299>
type_specifier(void)<301>
IDENTIFIER(myTests)<302>
parentheses_operator(()<303>
parentheses_operator())<304>
zone_operator({)<305>
type_specifier(bool)<306>
IDENTIFIER(myTest)<307>
assignment_operator(=)<308>
BOOLEAN(false)<309>
end_operator()<310>
type_specifier(int)<311>
IDENTIFIER(a)<312>
assignment_operator(=)<313>
NUMBER(0)<314>
separation_operator()<315>
IDENTIFIER(b)<316>
assignment_operator(=)<317>
NUMBER(0)<318>
end_operator()<319>
type_specifier(double)<320>
IDENTIFIER(c)<321>
assignment_operator(=)<322>
NUMBER(4)<323>
separation_operator()<324>
IDENTIFIER(d)<325>
assignment_operator(=)<326>
NUMBER(3)<327>
end_operator()<328>
IDENTIFIER(myTest)<329>
assignment_short_operator(!)<330>
end_operator()<332>
IDENTIFIER(myTest)<333>
assignment_operator(=)<334>
negative_operator()<335>
IDENTIFIER(myTest)<336>
end_operator()<337>
IDENTIFIER(a)<338>
assignment_short_operator(+)<339>
end_operator()<341>
IDENTIFIER(a)<342>
assignment_operator(+)<343>
NUMBER(1)<345>
end_operator()<346>
IDENTIFIER(a)<347>
assignment_operator(=)<348>
IDENTIFIER(a)<349>
maths_operator(+)<350>
NUMBER(1)<351>
end_operator()<352>
IDENTIFIER(b)<353>
assignment_short_operator(-)<354>
end_operator()<356>
IDENTIFIER(b)<357>
assignment_operator(-)<358>
NUMBER(1)<360>
end_operator()<361>
IDENTIFIER(b)<362>
assignment_operator(=)<363>
IDENTIFIER(b)<364>
maths_operator(-)<365>
NUMBER(1)<366>
end_operator()<367>
IDENTIFIER(c)<368>
assignment_operator(%)<369>
IDENTIFIER(d)<371>
end_operator()<372>
IDENTIFIER(c)<373>
maths_operator(%)<374>
IDENTIFIER(d)<375>
end_operator()<376>
IDENTIFIER(c)<377>
assignment_operator(/)<378>
NUMBER(0.5)<380>
end_operator()<381>
IDENTIFIER(c)<382>
maths_operator(/)<383>
IDENTIFIER(d)<384>
end_operator()<385>
IDENTIFIER(c)<386>
assignment_operator(*)<387>
IDENTIFIER(d)<389>
end_operator()<390>
IDENTIFIER(c)<391>
assignment_operator(=)<392>
IDENTIFIER(c)<393>
maths_operator(*)<394>
IDENTIFIER(d)<395>
end_operator()<396>
zone_operator(})<397>
function_declarator()<398>
return_type_operator()<399>
type_specifier(string)<401>
IDENTIFIER(myStringTest)<402>
parentheses_operator(()<403>
type_specifier(string)<404>
IDENTIFIER(a)<405>
parentheses_operator())<406>
zone_operator({)<407>
type_specifier(string)<408>
IDENTIFIER(b)<409>
assignment_operator(=)<410>
STRING(Hi!)<411>
end_operator()<412>
delete_statement()<413>
IDENTIFIER(b)<414>
end_operator()<415>
type_specifier(int)<416>
IDENTIFIER(b)<417>
assignment_operator(=)<418>
NUMBER(1)<419>
end_operator()<420>
zone_operator(})<421>
zone_operator(})<422>
state_specifier(public)<423>
class_declarator()<424>
IDENTIFIER(AnotherClass)<425>
zone_operator({)<426>
state_specifier(public)<427>
type_specifier(int)<428>
IDENTIFIER(a)<429>
assignment_operator(=)<430>
NUMBER(0)<431>
end_operator()<432>
state_specifier(private)<433>
type_specifier(int)<434>
IDENTIFIER(b)<435>
assignment_operator(=)<436>
NUMBER(0)<437>
end_operator()<438>
function_declarator()<439>
return_type_operator()<440>
IDENTIFIER(AnotherClass)<442>
parentheses_operator(()<443>
type_specifier(int)<444>
IDENTIFIER(a)<445>
separation_operator()<446>
type_specifier(int)<447>
IDENTIFIER(b)<448>
parentheses_operator())<449>
zone_operator({)<450>
IDENTIFIER(this)<451>
dot_operator()<452>
IDENTIFIER(a)<453>
assignment_operator(=)<454>
IDENTIFIER(a)<455>
end_operator()<456>
IDENTIFIER(this)<457>
dot_operator()<458>
IDENTIFIER(b)<459>
assignment_operator(=)<460>
IDENTIFIER(b)<461>
end_operator()<462>
zone_operator(})<463>
zone_operator(})<464>
class_declarator()<465>
IDENTIFIER(Smth)<466>
zone_operator({)<467>
zone_operator(})<468>
zone_operator(})<469>
