STRING(Test 1!)<1>
end_operator()<2>
STRING(Test 2!)<3>
end_operator()<4>
group_declarator()<5>
IDENTIFIER(AnotherLibrary)<6>
zone_operator(open)<7>
class_declarator()<8>
IDENTIFIER(MyClass)<9>
zone_operator(open)<10>
function_declarator()<11>
info_operator()<12>
type_specifier(int)<13>
IDENTIFIER(NumOne)<14>
parentheses_operator(open)<15>
parentheses_operator(close)<16>
zone_operator(open)<17>
return_statement()<18>
NUMBER(1)<19>
end_operator()<20>
zone_operator(close)<21>
zone_operator(close)<22>
zone_operator(close)<23>
group_declarator()<24>
state_operator()<25>
state_specifier(public)<27>
IDENTIFIER(LibFilNam)<28>
zone_operator(open)<29>
class_declarator()<30>
state_operator()<31>
state_specifier(public)<33>
IDENTIFIER(section)<34>
zone_operator(open)<35>
function_declarator()<36>
info_operator()<37>
type_specifier(string)<38>
IDENTIFIER(myFunction)<39>
parentheses_operator(open)<40>
IDENTIFIER(input)<41>
info_operator()<42>
type_specifier(int)<43>
parentheses_operator(close)<44>
zone_operator(open)<45>
variable_declarator()<46>
info_operator()<47>
type_specifier(string)<48>
IDENTIFIER(output)<49>
end_operator()<50>
ZONE_LINE(0;)<51>
return_statement()<52>
IDENTIFIER(output)<53>
end_operator()<54>
zone_operator(close)<55>
zone_operator(close)<56>
zone_operator(close)<57>
setsize_statement()<58>
type_specifier(int)<59>
NUMBER(2)<60>
end_operator()<61>
setsize_statement()<62>
type_specifier(double)<63>
NUMBER(10)<64>
end_operator()<65>
group_declarator()<66>
state_operator()<67>
state_specifier(public)<69>
IDENTIFIER(FinalPitch)<70>
zone_operator(open)<71>
class_declarator()<72>
state_operator()<73>
state_specifier(public)<75>
IDENTIFIER(Program)<76>
zone_operator(open)<77>
variable_declarator()<78>
state_operator()<79>
state_specifier(public)<81>
info_operator()<82>
type_specifier(int)<83>
IDENTIFIER(globA)<84>
assignment_operator(=)<85>
NUMBER(0)<86>
end_operator()<87>
variable_declarator()<88>
state_operator()<89>
state_specifier(public)<91>
info_operator()<92>
type_specifier(double)<93>
IDENTIFIER(globB)<94>
assignment_operator(=)<95>
DECNUMBER(0.0)<96>
end_operator()<97>
variable_declarator()<98>
state_operator()<99>
state_specifier(public)<101>
info_operator()<102>
type_specifier(float)<103>
IDENTIFIER(globC)<104>
assignment_operator(=)<105>
DECNUMBER(0.0)<106>
end_operator()<107>
variable_declarator()<108>
state_operator()<109>
state_specifier(public)<111>
info_operator()<112>
type_specifier(char)<113>
IDENTIFIER(globD)<114>
assignment_operator(=)<115>
CHAR(D)<116>
end_operator()<117>
variable_declarator()<118>
state_operator()<119>
state_specifier(public)<121>
info_operator()<122>
type_specifier(string)<123>
IDENTIFIER(globE)<124>
assignment_operator(=)<125>
STRING(Global E)<126>
end_operator()<127>
variable_declarator()<128>
state_operator()<129>
state_specifier(public)<131>
info_operator()<132>
type_specifier(bool)<133>
IDENTIFIER(globF)<134>
assignment_operator(=)<135>
BOOLEAN(true)<136>
end_operator()<137>
variable_declarator()<138>
state_operator()<139>
state_specifier(public)<141>
info_operator()<142>
type_specifier(file)<143>
IDENTIFIER(globG)<144>
assignment_operator(=)<145>
IDENTIFIER(new)<146>
IDENTIFIER(FileStream)<147>
parentheses_operator(open)<148>
STRING(path/to/my/file.txt)<149>
parentheses_operator(close)<150>
end_operator()<151>
variable_declarator()<152>
state_operator()<153>
state_specifier(public)<155>
info_operator()<156>
type_specifier(hex)<157>
IDENTIFIER(globH)<158>
assignment_operator(=)<159>
HEX(FF)<160>
end_operator()<161>
variable_declarator()<162>
state_operator()<163>
state_specifier(public)<165>
info_operator()<166>
type_specifier(string[1])<167>
IDENTIFIER(globI)<170>
assignment_operator(=)<171>
IDENTIFIER(new)<172>
IDENTIFIER(Array)<173>
info_operator()<174>
type_specifier(string[1])<175>
parentheses_operator(open)<178>
NUMBER(6)<179>
parentheses_operator(close)<180>
end_operator()<181>
variable_declarator()<182>
state_operator()<183>
state_specifier(private)<185>
info_operator()<186>
type_specifier(hex[2])<187>
IDENTIFIER(globJ)<191>
assignment_operator(=)<192>
IDENTIFIER(new)<193>
IDENTIFIER(Array)<194>
info_operator()<195>
type_specifier(hex[2])<196>
parentheses_operator(open)<200>
NUMBER(8)<201>
separation_operator()<202>
NUMBER(2)<203>
parentheses_operator(close)<204>
end_operator()<205>
function_declarator()<206>
state_operator()<207>
state_specifier(public)<209>
info_operator()<210>
type_specifier(int)<211>
IDENTIFIER(Main)<212>
parentheses_operator(open)<213>
IDENTIFIER(envi)<214>
info_operator()<215>
type_specifier(string[1])<216>
separation_operator()<219>
IDENTIFIER(length)<220>
info_operator()<221>
type_specifier(int)<222>
parentheses_operator(close)<223>
zone_operator(open)<224>
IDENTIFIER(Func)<225>
parentheses_operator(open)<226>
parentheses_operator(close)<227>
end_operator()<228>
variable_declarator()<229>
info_operator()<230>
type_specifier(^int)<231>
IDENTIFIER(a)<233>
assignment_operator(=)<234>
NUMBER(0)<235>
end_operator()<236>
variable_declarator()<237>
info_operator()<238>
type_specifier(int)<239>
IDENTIFIER(b)<240>
assignment_operator(=)<241>
NUMBER(1)<242>
end_operator()<243>
variable_declarator()<244>
info_operator()<245>
type_specifier(^int)<246>
IDENTIFIER(c)<248>
assignment_operator(=)<249>
IDENTIFIER(Test)<250>
parentheses_operator(open)<251>
IDENTIFIER(a)<252>
separation_operator()<253>
NUMBER(1)<254>
parentheses_operator(close)<255>
end_operator()<256>
IDENTIFIER(a)<257>
assignment_operator(=)<258>
NUMBER(1)<259>
separation_operator()<260>
IDENTIFIER(c)<261>
assignment_operator(=)<262>
NUMBER(5)<263>
end_operator()<264>
IDENTIFIER(PlusOne)<265>
parentheses_operator(open)<266>
IDENTIFIER(b)<267>
info_operator()<268>
ref_statement()<269>
parentheses_operator(close)<270>
end_operator()<271>
variable_declarator()<272>
info_operator()<273>
type_specifier(bool)<274>
IDENTIFIER(myTest)<275>
assignment_operator(=)<276>
BOOLEAN(false)<277>
end_operator()<278>
if_statement()<279>
parentheses_operator(open)<280>
IDENTIFIER(myTest)<281>
comparison_operator(=)<282>
BOOLEAN(true)<284>
parentheses_operator(close)<285>
zone_operator(open)<286>
zone_operator(close)<287>
else_statement()<288>
zone_operator(open)<289>
zone_operator(close)<290>
if_statement()<291>
parentheses_operator(open)<292>
IDENTIFIER(myTest)<293>
comparison_operator(!)<294>
BOOLEAN(true)<296>
parentheses_operator(close)<297>
zone_operator(open)<298>
zone_operator(close)<299>
if_statement()<300>
parentheses_operator(open)<301>
NUMBER(1)<302>
comparison_operator(>)<303>
NUMBER(5)<305>
comparison_operator(|)<306>
NUMBER(1)<308>
comparison_operator(~>)<309>
NUMBER(5)<310>
comparison_operator(|)<311>
parentheses_operator(open)<313>
NUMBER(1)<314>
comparison_operator(~>)<315>
NUMBER(1)<316>
comparison_operator(&)<317>
NUMBER(1)<319>
comparison_operator(~<)<320>
NUMBER(1)<321>
parentheses_operator(close)<322>
parentheses_operator(close)<323>
zone_operator(open)<324>
zone_operator(close)<325>
if_statement()<326>
parentheses_operator(open)<327>
NUMBER(1)<328>
comparison_operator(<)<329>
NUMBER(5)<331>
comparison_operator(|)<332>
NUMBER(1)<334>
comparison_operator(~<)<335>
NUMBER(5)<336>
parentheses_operator(close)<337>
zone_operator(open)<338>
zone_operator(close)<339>
return_statement()<340>
NUMBER(0)<341>
end_operator()<342>
zone_operator(close)<343>
function_declarator()<344>
state_operator()<345>
state_specifier(private)<347>
info_operator()<348>
type_specifier(void)<349>
IDENTIFIER(Func)<350>
parentheses_operator(open)<351>
parentheses_operator(close)<352>
zone_operator(open)<353>
zone_operator(close)<354>
function_declarator()<355>
state_operator()<356>
state_specifier(public)<358>
info_operator()<359>
type_specifier(^int)<360>
IDENTIFIER(Test)<362>
parentheses_operator(open)<363>
IDENTIFIER(a)<364>
info_operator()<365>
type_specifier(^int)<366>
separation_operator()<368>
IDENTIFIER(b)<369>
info_operator()<370>
type_specifier(int)<371>
parentheses_operator(close)<372>
zone_operator(open)<373>
IDENTIFIER(a)<374>
assignment_operator(=)<375>
parentheses_operator(open)<376>
type_specifier(^int)<377>
parentheses_operator(close)<379>
IDENTIFIER(b)<380>
end_operator()<381>
return_statement()<382>
IDENTIFIER(a)<383>
end_operator()<384>
zone_operator(close)<385>
function_declarator()<386>
state_operator()<387>
state_specifier(public)<389>
info_operator()<390>
type_specifier(void)<391>
IDENTIFIER(PlusOne)<392>
parentheses_operator(open)<393>
IDENTIFIER(a)<394>
info_operator()<395>
type_specifier(int)<396>
info_operator()<397>
ref_statement()<398>
parentheses_operator(close)<399>
zone_operator(open)<400>
IDENTIFIER(a)<401>
assignment_short_operator(+)<402>
end_operator()<404>
zone_operator(close)<405>
function_declarator()<406>
state_operator()<407>
state_specifier(public)<409>
info_operator()<410>
type_specifier(void)<411>
IDENTIFIER(myTests)<412>
parentheses_operator(open)<413>
parentheses_operator(close)<414>
zone_operator(open)<415>
variable_declarator()<416>
info_operator()<417>
type_specifier(bool)<418>
IDENTIFIER(myTest)<419>
assignment_operator(=)<420>
BOOLEAN(false)<421>
end_operator()<422>
variable_declarator()<423>
info_operator()<424>
type_specifier(int)<425>
IDENTIFIER(a)<426>
assignment_operator(=)<427>
NUMBER(0)<428>
separation_operator()<429>
IDENTIFIER(b)<430>
assignment_operator(=)<431>
NUMBER(0)<432>
end_operator()<433>
variable_declarator()<434>
info_operator()<435>
type_specifier(double)<436>
IDENTIFIER(c)<437>
assignment_operator(=)<438>
NUMBER(4)<439>
separation_operator()<440>
IDENTIFIER(d)<441>
assignment_operator(=)<442>
NUMBER(3)<443>
end_operator()<444>
IDENTIFIER(myTest)<445>
assignment_short_operator(!)<446>
end_operator()<448>
IDENTIFIER(myTest)<449>
assignment_operator(=)<450>
negative_operator()<451>
IDENTIFIER(myTest)<452>
end_operator()<453>
IDENTIFIER(a)<454>
assignment_short_operator(+)<455>
end_operator()<457>
IDENTIFIER(a)<458>
assignment_operator(+)<459>
NUMBER(1)<461>
end_operator()<462>
IDENTIFIER(a)<463>
assignment_operator(=)<464>
IDENTIFIER(a)<465>
maths_operator(+)<466>
NUMBER(1)<467>
end_operator()<468>
IDENTIFIER(b)<469>
assignment_short_operator(-)<470>
end_operator()<472>
IDENTIFIER(b)<473>
assignment_operator(-)<474>
NUMBER(1)<476>
end_operator()<477>
IDENTIFIER(b)<478>
assignment_operator(=)<479>
IDENTIFIER(b)<480>
maths_operator(-)<481>
NUMBER(1)<482>
end_operator()<483>
IDENTIFIER(c)<484>
assignment_operator(%)<485>
IDENTIFIER(d)<487>
end_operator()<488>
IDENTIFIER(c)<489>
maths_operator(%)<490>
IDENTIFIER(d)<491>
end_operator()<492>
IDENTIFIER(c)<493>
assignment_operator(/)<494>
DECNUMBER(0.5)<496>
end_operator()<497>
IDENTIFIER(c)<498>
maths_operator(/)<499>
IDENTIFIER(d)<500>
end_operator()<501>
IDENTIFIER(c)<502>
assignment_operator(*)<503>
IDENTIFIER(d)<505>
end_operator()<506>
IDENTIFIER(c)<507>
assignment_operator(=)<508>
IDENTIFIER(c)<509>
maths_operator(*)<510>
IDENTIFIER(d)<511>
end_operator()<512>
zone_operator(close)<513>
function_declarator()<514>
info_operator()<515>
type_specifier(string)<516>
IDENTIFIER(myStringTest)<517>
parentheses_operator(open)<518>
IDENTIFIER(a)<519>
info_operator()<520>
type_specifier(string)<521>
parentheses_operator(close)<522>
zone_operator(open)<523>
variable_declarator()<524>
info_operator()<525>
type_specifier(string)<526>
IDENTIFIER(b)<527>
assignment_operator(=)<528>
STRING(Hi!)<529>
end_operator()<530>
delete_statement()<531>
IDENTIFIER(b)<532>
end_operator()<533>
variable_declarator()<534>
info_operator()<535>
type_specifier(int)<536>
IDENTIFIER(b)<537>
assignment_operator(=)<538>
NUMBER(1)<539>
end_operator()<540>
zone_operator(close)<541>
function_declarator()<542>
info_operator()<543>
type_specifier(hex[2])<544>
IDENTIFIER(ReturnHexArray)<548>
parentheses_operator(open)<549>
parentheses_operator(close)<550>
zone_operator(open)<551>
return_statement()<552>
IDENTIFIER(this)<553>
dot_operator()<554>
IDENTIFIER(globJ)<555>
end_operator()<556>
zone_operator(close)<557>
zone_operator(close)<558>
class_declarator()<559>
state_operator()<560>
state_specifier(public)<562>
IDENTIFIER(AnotherClass)<563>
zone_operator(open)<564>
variable_declarator()<565>
state_operator()<566>
state_specifier(public)<568>
info_operator()<569>
type_specifier(int)<570>
IDENTIFIER(a)<571>
assignment_operator(=)<572>
NUMBER(0)<573>
end_operator()<574>
variable_declarator()<575>
state_operator()<576>
state_specifier(private)<578>
info_operator()<579>
type_specifier(int)<580>
IDENTIFIER(b)<581>
assignment_operator(=)<582>
NUMBER(0)<583>
end_operator()<584>
function_declarator()<585>
state_operator()<586>
state_specifier(public)<588>
info_operator()<589>
IDENTIFIER(AnotherClass)<590>
IDENTIFIER(Construct)<591>
parentheses_operator(open)<592>
IDENTIFIER(a)<593>
info_operator()<594>
type_specifier(int)<595>
separation_operator()<596>
IDENTIFIER(b)<597>
info_operator()<598>
type_specifier(int)<599>
parentheses_operator(close)<600>
zone_operator(open)<601>
IDENTIFIER(this)<602>
dot_operator()<603>
IDENTIFIER(a)<604>
assignment_operator(=)<605>
IDENTIFIER(a)<606>
end_operator()<607>
IDENTIFIER(this)<608>
dot_operator()<609>
IDENTIFIER(b)<610>
assignment_operator(=)<611>
IDENTIFIER(b)<612>
end_operator()<613>
zone_operator(close)<614>
zone_operator(close)<615>
class_declarator()<616>
IDENTIFIER(Smth)<617>
zone_operator(open)<618>
function_declarator()<619>
info_operator()<620>
type_specifier(void)<621>
IDENTIFIER(myTest)<622>
parentheses_operator(open)<623>
IDENTIFIER(a)<624>
info_operator()<625>
type_specifier(int)<626>
parentheses_operator(close)<627>
zone_operator(open)<628>
zone_operator(close)<629>
zone_operator(close)<630>
zone_operator(close)<631>
