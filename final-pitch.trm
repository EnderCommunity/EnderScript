STRING(Test 1!)<1>
?(;)<2>
STRING(Test 2!)<3>
?(;)<4>
group_declarator()<5>
IDENTIFIER(AnotherLibrary)<6>
?({)<7>
class_declarator()<8>
IDENTIFIER(MyClass)<9>
?({)<10>
function_declarator()<11>
?(:)<12>
?(:)<13>
type_specifier(int)<14>
IDENTIFIER(NumOne)<15>
?(()<16>
?())<17>
?({)<18>
IDENTIFIER(return)<19>
NUMBER(1)<20>
?(;)<21>
?(})<22>
?(})<23>
?(})<24>
state_specifier(public)<25>
group_declarator()<26>
IDENTIFIER(LibFilNam)<27>
?({)<28>
state_specifier(public)<29>
class_declarator()<30>
IDENTIFIER(section)<31>
?({)<32>
function_declarator()<33>
?(:)<34>
?(:)<35>
type_specifier(string)<36>
IDENTIFIER(myFunction)<37>
?(()<38>
type_specifier(int)<39>
IDENTIFIER(input)<40>
?())<41>
?({)<42>
type_specifier(string)<43>
IDENTIFIER(output)<44>
?(;)<45>
ZONE_LINE(0;)<46>
IDENTIFIER(return)<47>
IDENTIFIER(output)<48>
?(;)<49>
?(})<50>
?(})<51>
?(})<52>
IDENTIFIER(define)<53>
IDENTIFIER(ZERO)<54>
NUMBER(0)<55>
?(;)<56>
IDENTIFIER(setsize)<57>
type_specifier(int)<58>
NUMBER(2)<59>
?(;)<60>
IDENTIFIER(setsize)<61>
type_specifier(double)<62>
NUMBER(10)<63>
?(;)<64>
state_specifier(public)<65>
group_declarator()<66>
IDENTIFIER(FinalPitch)<67>
?({)<68>
state_specifier(public)<69>
class_declarator()<70>
IDENTIFIER(Program)<71>
?({)<72>
type_specifier(int)<73>
IDENTIFIER(globA)<74>
assignment_operator()<75>
NUMBER(0)<76>
?(;)<77>
type_specifier(double)<78>
IDENTIFIER(globB)<79>
assignment_operator()<80>
NUMBER(0.0)<81>
?(;)<82>
IDENTIFIER(float)<83>
IDENTIFIER(globC)<84>
assignment_operator()<85>
NUMBER(0.0)<86>
?(;)<87>
type_specifier(char)<88>
IDENTIFIER(globD)<89>
assignment_operator()<90>
CHAR(D)<91>
?(;)<92>
type_specifier(string)<93>
IDENTIFIER(globE)<94>
assignment_operator()<95>
STRING(Global E)<96>
?(;)<97>
type_specifier(bool)<98>
IDENTIFIER(globF)<99>
assignment_operator()<100>
BOOLEAN(true)<101>
?(;)<102>
type_specifier(file)<103>
IDENTIFIER(globG)<104>
assignment_operator()<105>
IDENTIFIER(new)<106>
IDENTIFIER(FileStream)<107>
?(()<108>
STRING(path/to/my/file.txt)<109>
?())<110>
?(;)<111>
state_specifier(public)<112>
function_declarator()<113>
?(:)<114>
?(:)<115>
type_specifier(int)<116>
IDENTIFIER(Main)<117>
?(()<118>
type_specifier(string)<119>
?([)<120>
?(])<121>
IDENTIFIER(envi)<122>
?(,)<123>
type_specifier(int)<124>
IDENTIFIER(length)<125>
?())<126>
?({)<127>
IDENTIFIER(Func)<128>
?(()<129>
?())<130>
?(;)<131>
?(^)<132>
type_specifier(int)<133>
IDENTIFIER(a)<134>
assignment_operator()<135>
NUMBER(0)<136>
?(;)<137>
type_specifier(int)<138>
IDENTIFIER(b)<139>
assignment_operator()<140>
NUMBER(1)<141>
?(;)<142>
?(^)<143>
type_specifier(int)<144>
IDENTIFIER(c)<145>
assignment_operator()<146>
IDENTIFIER(Test)<147>
?(()<148>
IDENTIFIER(a)<149>
?(,)<150>
NUMBER(1)<151>
?())<152>
?(;)<153>
IDENTIFIER(a)<154>
?(,)<155>
IDENTIFIER(c)<156>
assignment_operator()<157>
NUMBER(5)<158>
?(;)<159>
IDENTIFIER(PlusOne)<160>
?(()<161>
IDENTIFIER(ref)<162>
IDENTIFIER(b)<163>
?())<164>
?(()<165>
IDENTIFIER(ref)<166>
IDENTIFIER(b)<167>
?())<168>
?(;)<169>
type_specifier(bool)<170>
IDENTIFIER(myTest)<171>
assignment_operator()<172>
BOOLEAN(false)<173>
?(;)<174>
IDENTIFIER(if)<175>
?(()<176>
IDENTIFIER(myTest)<177>
comparison_operator()<178>
BOOLEAN(true)<180>
?())<181>
?({)<182>
?(})<183>
IDENTIFIER(if)<184>
?(()<185>
IDENTIFIER(myTest)<186>
negative_comparison_operator()<187>
BOOLEAN(true)<189>
?())<190>
?({)<191>
?(})<192>
IDENTIFIER(if)<193>
?(()<194>
NUMBER(1)<195>
greater_equal_comparison_operator()<196>
NUMBER(5)<198>
?(|)<199>
?(|)<200>
NUMBER(1)<201>
greater_comparison_operator()<202>
NUMBER(5)<203>
?(|)<204>
?(|)<205>
NUMBER(1)<206>
greater_comparison_operator()<207>
NUMBER(1)<208>
?(|)<209>
?(|)<210>
NUMBER(1)<211>
smaller_comparison_operator()<212>
NUMBER(1)<213>
?())<214>
?({)<215>
?(})<216>
IDENTIFIER(if)<217>
?(()<218>
NUMBER(1)<219>
smaller_equal_comparison_operator()<220>
NUMBER(5)<222>
?(|)<223>
?(|)<224>
NUMBER(1)<225>
smaller_comparison_operator()<226>
NUMBER(5)<227>
?())<228>
?({)<229>
?(})<230>
IDENTIFIER(return)<231>
NUMBER(0)<232>
?(;)<233>
?(})<234>
state_specifier(private)<235>
function_declarator()<236>
?(:)<237>
?(:)<238>
IDENTIFIER(void)<239>
IDENTIFIER(Func)<240>
?(()<241>
?())<242>
?({)<243>
?(})<244>
state_specifier(public)<245>
function_declarator()<246>
?(:)<247>
?(:)<248>
?(^)<249>
type_specifier(int)<250>
IDENTIFIER(Test)<251>
?(()<252>
?(^)<253>
type_specifier(int)<254>
IDENTIFIER(a)<255>
?(,)<256>
type_specifier(int)<257>
IDENTIFIER(b)<258>
?())<259>
?({)<260>
IDENTIFIER(a)<261>
assignment_operator()<262>
?(()<263>
?(^)<264>
type_specifier(int)<265>
?())<266>
IDENTIFIER(b)<267>
?(;)<268>
IDENTIFIER(return)<269>
IDENTIFIER(a)<270>
?(;)<271>
?(})<272>
state_specifier(public)<273>
function_declarator()<274>
?(:)<275>
?(:)<276>
IDENTIFIER(void)<277>
IDENTIFIER(PlusOne)<278>
?(()<279>
IDENTIFIER(ref)<280>
type_specifier(int)<281>
IDENTIFIER(a)<282>
?())<283>
?({)<284>
IDENTIFIER(a)<285>
?(+)<286>
?(+)<287>
?(;)<288>
?(})<289>
?(})<290>
state_specifier(public)<291>
class_declarator()<292>
IDENTIFIER(AnotherClass)<293>
?({)<294>
state_specifier(public)<295>
type_specifier(int)<296>
IDENTIFIER(a)<297>
assignment_operator()<298>
NUMBER(0)<299>
?(;)<300>
state_specifier(private)<301>
type_specifier(int)<302>
IDENTIFIER(b)<303>
assignment_operator()<304>
NUMBER(0)<305>
?(;)<306>
function_declarator()<307>
?(:)<308>
?(:)<309>
IDENTIFIER(constructor)<310>
?(()<311>
type_specifier(int)<312>
IDENTIFIER(a)<313>
?(,)<314>
type_specifier(int)<315>
IDENTIFIER(b)<316>
?())<317>
?({)<318>
IDENTIFIER(this)<319>
?(.)<320>
IDENTIFIER(a)<321>
assignment_operator()<322>
IDENTIFIER(a)<323>
?(;)<324>
IDENTIFIER(this)<325>
?(.)<326>
IDENTIFIER(b)<327>
assignment_operator()<328>
IDENTIFIER(b)<329>
?(;)<330>
?(})<331>
?(})<332>
class_declarator()<333>
IDENTIFIER(Smth)<334>
?({)<335>
?(})<336>
?(})<337>
