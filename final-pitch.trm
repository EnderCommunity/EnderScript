STRING(Test 1!)<1>
end_operator()<2>
STRING(Test 2!)<3>
end_operator()<4>
group_declarator()<5>
IDENTIFIER(AnotherLibrary)<6>
zone_operator(open)<7>
class_declarator()<8>
IDENTIFIER(MyClass)<9>
zone_operator(open)<10>
function_declarator()<11>
info_operator()<12>
type_specifier(int)<13>
IDENTIFIER(NumOne)<14>
parentheses_operator(open)<15>
parentheses_operator(close)<16>
zone_operator(open)<17>
return_statement()<18>
NUMBER(1)<19>
end_operator()<20>
zone_operator(close)<21>
zone_operator(close)<22>
zone_operator(close)<23>
group_declarator()<24>
state_operator()<25>
state_specifier(public)<27>
IDENTIFIER(LibFilNam)<28>
zone_operator(open)<29>
class_declarator()<30>
state_operator()<31>
state_specifier(public)<33>
IDENTIFIER(section)<34>
zone_operator(open)<35>
function_declarator()<36>
info_operator()<37>
type_specifier(string)<38>
IDENTIFIER(myFunction)<39>
parentheses_operator(open)<40>
IDENTIFIER(input)<41>
info_operator()<42>
type_specifier(int)<43>
parentheses_operator(close)<44>
zone_operator(open)<45>
variable_declarator()<46>
info_operator()<47>
type_specifier(string)<48>
IDENTIFIER(output)<49>
end_operator()<50>
ZONE_LINE(0;)<51>
return_statement()<52>
IDENTIFIER(output)<53>
end_operator()<54>
zone_operator(close)<55>
zone_operator(close)<56>
zone_operator(close)<57>
setsize_statement()<58>
type_specifier(int)<59>
NUMBER(2)<60>
end_operator()<61>
setsize_statement()<62>
type_specifier(double)<63>
NUMBER(10)<64>
end_operator()<65>
group_declarator()<66>
state_operator()<67>
state_specifier(public)<69>
IDENTIFIER(FinalPitch)<70>
zone_operator(open)<71>
class_declarator()<72>
state_operator()<73>
state_specifier(public)<75>
IDENTIFIER(Program)<76>
zone_operator(open)<77>
variable_declarator()<78>
state_operator()<79>
state_specifier(public)<81>
info_operator()<82>
type_specifier(int)<83>
IDENTIFIER(globA)<84>
assignment_operator(=)<85>
NUMBER(0)<86>
end_operator()<87>
variable_declarator()<88>
state_operator()<89>
state_specifier(public)<91>
info_operator()<92>
type_specifier(double)<93>
IDENTIFIER(globB)<94>
assignment_operator(=)<95>
DECNUMBER(0.0)<96>
end_operator()<97>
variable_declarator()<98>
state_operator()<99>
state_specifier(public)<101>
info_operator()<102>
type_specifier(float)<103>
IDENTIFIER(globC)<104>
assignment_operator(=)<105>
DECNUMBER(0.0)<106>
end_operator()<107>
variable_declarator()<108>
state_operator()<109>
state_specifier(public)<111>
info_operator()<112>
type_specifier(char)<113>
IDENTIFIER(globD)<114>
assignment_operator(=)<115>
CHAR(D)<116>
end_operator()<117>
variable_declarator()<118>
state_operator()<119>
state_specifier(public)<121>
info_operator()<122>
type_specifier(string)<123>
IDENTIFIER(globE)<124>
assignment_operator(=)<125>
STRING(Global E)<126>
end_operator()<127>
variable_declarator()<128>
state_operator()<129>
state_specifier(public)<131>
info_operator()<132>
type_specifier(bool)<133>
IDENTIFIER(globF)<134>
assignment_operator(=)<135>
BOOLEAN(true)<136>
end_operator()<137>
variable_declarator()<138>
state_operator()<139>
state_specifier(public)<141>
info_operator()<142>
type_specifier(file)<143>
IDENTIFIER(globG)<144>
assignment_operator(=)<145>
IDENTIFIER(types)<146>
dot_operator()<147>
IDENTIFIER(create)<148>
dot_operator()<149>
IDENTIFIER(fileStream)<150>
parentheses_operator(open)<151>
STRING(path/to/my/file.txt)<152>
parentheses_operator(close)<153>
end_operator()<154>
variable_declarator()<155>
state_operator()<156>
state_specifier(public)<158>
info_operator()<159>
type_specifier(hex)<160>
IDENTIFIER(globH)<161>
assignment_operator(=)<162>
HEX(FF)<163>
end_operator()<164>
variable_declarator()<165>
state_operator()<166>
state_specifier(public)<168>
info_operator()<169>
type_specifier(string[1])<170>
IDENTIFIER(globI)<173>
assignment_operator(=)<174>
IDENTIFIER(types)<175>
dot_operator()<176>
IDENTIFIER(create)<177>
dot_operator()<178>
IDENTIFIER(Array)<179>
info_operator()<180>
type_specifier(string[1])<181>
parentheses_operator(open)<184>
NUMBER(6)<185>
parentheses_operator(close)<186>
end_operator()<187>
variable_declarator()<188>
state_operator()<189>
state_specifier(private)<191>
info_operator()<192>
type_specifier(hex[2])<193>
IDENTIFIER(globJ)<197>
assignment_operator(=)<198>
IDENTIFIER(types)<199>
dot_operator()<200>
IDENTIFIER(create)<201>
dot_operator()<202>
IDENTIFIER(Array)<203>
info_operator()<204>
type_specifier(hex[1])<205>
parentheses_operator(open)<208>
NUMBER(8)<209>
separation_operator()<210>
NUMBER(2)<211>
parentheses_operator(close)<212>
end_operator()<213>
function_declarator()<214>
state_operator()<215>
state_specifier(public)<217>
info_operator()<218>
type_specifier(int)<219>
IDENTIFIER(Main)<220>
parentheses_operator(open)<221>
IDENTIFIER(envi)<222>
info_operator()<223>
type_specifier(string[1])<224>
separation_operator()<227>
IDENTIFIER(length)<228>
info_operator()<229>
type_specifier(int)<230>
parentheses_operator(close)<231>
zone_operator(open)<232>
IDENTIFIER(Func)<233>
parentheses_operator(open)<234>
parentheses_operator(close)<235>
end_operator()<236>
variable_declarator()<237>
info_operator()<238>
type_specifier(^int)<239>
IDENTIFIER(a)<241>
assignment_operator(=)<242>
NUMBER(0)<243>
end_operator()<244>
variable_declarator()<245>
info_operator()<246>
type_specifier(int)<247>
IDENTIFIER(b)<248>
assignment_operator(=)<249>
NUMBER(1)<250>
end_operator()<251>
variable_declarator()<252>
info_operator()<253>
type_specifier(^int)<254>
IDENTIFIER(c)<256>
assignment_operator(=)<257>
IDENTIFIER(Test)<258>
parentheses_operator(open)<259>
IDENTIFIER(a)<260>
separation_operator()<261>
NUMBER(1)<262>
parentheses_operator(close)<263>
end_operator()<264>
IDENTIFIER(a)<265>
assignment_operator(=)<266>
NUMBER(1)<267>
separation_operator()<268>
IDENTIFIER(c)<269>
assignment_operator(=)<270>
NUMBER(5)<271>
end_operator()<272>
IDENTIFIER(a)<273>
assignment_operator(=)<274>
IDENTIFIER(c)<275>
assignment_operator(=)<276>
NUMBER(6)<277>
end_operator()<278>
IDENTIFIER(PlusOne)<279>
parentheses_operator(open)<280>
IDENTIFIER(b)<281>
info_operator()<282>
ref_statement()<283>
parentheses_operator(close)<284>
end_operator()<285>
variable_declarator()<286>
info_operator()<287>
type_specifier(bool)<288>
IDENTIFIER(myTest)<289>
assignment_operator(=)<290>
BOOLEAN(false)<291>
end_operator()<292>
if_statement()<293>
parentheses_operator(open)<294>
IDENTIFIER(myTest)<295>
comparison_operator(=)<296>
BOOLEAN(true)<298>
parentheses_operator(close)<299>
zone_operator(open)<300>
zone_operator(close)<301>
else_statement()<302>
zone_operator(open)<303>
zone_operator(close)<304>
if_statement()<305>
parentheses_operator(open)<306>
IDENTIFIER(myTest)<307>
comparison_operator(!)<308>
BOOLEAN(true)<310>
parentheses_operator(close)<311>
zone_operator(open)<312>
zone_operator(close)<313>
if_statement()<314>
parentheses_operator(open)<315>
NUMBER(1)<316>
comparison_operator(>)<317>
NUMBER(5)<319>
comparison_operator(|)<320>
NUMBER(1)<322>
comparison_operator(~>)<323>
NUMBER(5)<324>
comparison_operator(|)<325>
parentheses_operator(open)<327>
NUMBER(1)<328>
comparison_operator(~>)<329>
NUMBER(1)<330>
comparison_operator(&)<331>
NUMBER(1)<333>
comparison_operator(~<)<334>
NUMBER(1)<335>
parentheses_operator(close)<336>
parentheses_operator(close)<337>
zone_operator(open)<338>
zone_operator(close)<339>
if_statement()<340>
parentheses_operator(open)<341>
NUMBER(1)<342>
comparison_operator(<)<343>
NUMBER(5)<345>
comparison_operator(|)<346>
NUMBER(1)<348>
comparison_operator(~<)<349>
NUMBER(5)<350>
parentheses_operator(close)<351>
zone_operator(open)<352>
zone_operator(close)<353>
IDENTIFIER(io)<354>
dot_operator()<355>
IDENTIFIER(console)<356>
dot_operator()<357>
IDENTIFIER(print)<358>
parentheses_operator(open)<359>
STRING(Hello there!)<360>
parentheses_operator(close)<361>
end_operator()<362>
return_statement()<363>
NUMBER(0)<364>
end_operator()<365>
zone_operator(close)<366>
function_declarator()<367>
state_operator()<368>
state_specifier(private)<370>
info_operator()<371>
type_specifier(void)<372>
IDENTIFIER(Func)<373>
parentheses_operator(open)<374>
parentheses_operator(close)<375>
zone_operator(open)<376>
zone_operator(close)<377>
function_declarator()<378>
state_operator()<379>
state_specifier(public)<381>
info_operator()<382>
type_specifier(^int)<383>
IDENTIFIER(Test)<385>
parentheses_operator(open)<386>
IDENTIFIER(a)<387>
info_operator()<388>
type_specifier(^int)<389>
separation_operator()<391>
IDENTIFIER(b)<392>
info_operator()<393>
type_specifier(int)<394>
parentheses_operator(close)<395>
zone_operator(open)<396>
IDENTIFIER(a)<397>
assignment_operator(=)<398>
parentheses_operator(open)<399>
type_specifier(^int)<400>
parentheses_operator(close)<402>
IDENTIFIER(b)<403>
end_operator()<404>
return_statement()<405>
IDENTIFIER(a)<406>
end_operator()<407>
zone_operator(close)<408>
function_declarator()<409>
state_operator()<410>
state_specifier(public)<412>
info_operator()<413>
type_specifier(void)<414>
IDENTIFIER(PlusOne)<415>
parentheses_operator(open)<416>
IDENTIFIER(a)<417>
info_operator()<418>
type_specifier(int)<419>
info_operator()<420>
ref_statement()<421>
parentheses_operator(close)<422>
zone_operator(open)<423>
IDENTIFIER(a)<424>
assignment_short_operator(+)<425>
end_operator()<427>
zone_operator(close)<428>
function_declarator()<429>
state_operator()<430>
state_specifier(public)<432>
info_operator()<433>
type_specifier(void)<434>
IDENTIFIER(myTests)<435>
parentheses_operator(open)<436>
parentheses_operator(close)<437>
zone_operator(open)<438>
variable_declarator()<439>
info_operator()<440>
type_specifier(bool)<441>
IDENTIFIER(myTest)<442>
assignment_operator(=)<443>
BOOLEAN(false)<444>
end_operator()<445>
variable_declarator()<446>
info_operator()<447>
type_specifier(int)<448>
IDENTIFIER(a)<449>
assignment_operator(=)<450>
NUMBER(0)<451>
separation_operator()<452>
IDENTIFIER(b)<453>
assignment_operator(=)<454>
NUMBER(0)<455>
end_operator()<456>
variable_declarator()<457>
info_operator()<458>
type_specifier(double)<459>
IDENTIFIER(c)<460>
assignment_operator(=)<461>
NUMBER(4)<462>
separation_operator()<463>
IDENTIFIER(d)<464>
assignment_operator(=)<465>
NUMBER(3)<466>
end_operator()<467>
IDENTIFIER(myTest)<468>
assignment_short_operator(!)<469>
end_operator()<471>
IDENTIFIER(myTest)<472>
assignment_operator(=)<473>
negative_operator()<474>
IDENTIFIER(myTest)<475>
end_operator()<476>
IDENTIFIER(a)<477>
assignment_short_operator(+)<478>
end_operator()<480>
IDENTIFIER(a)<481>
assignment_operator(+)<482>
NUMBER(1)<484>
end_operator()<485>
IDENTIFIER(a)<486>
assignment_operator(=)<487>
IDENTIFIER(a)<488>
maths_operator(+)<489>
NUMBER(1)<490>
end_operator()<491>
IDENTIFIER(b)<492>
assignment_short_operator(-)<493>
end_operator()<495>
IDENTIFIER(b)<496>
assignment_operator(-)<497>
NUMBER(1)<499>
end_operator()<500>
IDENTIFIER(b)<501>
assignment_operator(=)<502>
IDENTIFIER(b)<503>
maths_operator(-)<504>
NUMBER(1)<505>
end_operator()<506>
IDENTIFIER(c)<507>
assignment_operator(%)<508>
IDENTIFIER(d)<510>
end_operator()<511>
IDENTIFIER(c)<512>
maths_operator(%)<513>
IDENTIFIER(d)<514>
end_operator()<515>
IDENTIFIER(c)<516>
assignment_operator(/)<517>
DECNUMBER(0.5)<519>
end_operator()<520>
IDENTIFIER(c)<521>
maths_operator(/)<522>
IDENTIFIER(d)<523>
end_operator()<524>
IDENTIFIER(c)<525>
assignment_operator(*)<526>
IDENTIFIER(d)<528>
end_operator()<529>
IDENTIFIER(c)<530>
assignment_operator(=)<531>
IDENTIFIER(c)<532>
maths_operator(*)<533>
IDENTIFIER(d)<534>
end_operator()<535>
zone_operator(close)<536>
function_declarator()<537>
info_operator()<538>
type_specifier(string)<539>
IDENTIFIER(myStringTest)<540>
parentheses_operator(open)<541>
IDENTIFIER(a)<542>
info_operator()<543>
type_specifier(string)<544>
parentheses_operator(close)<545>
zone_operator(open)<546>
variable_declarator()<547>
info_operator()<548>
type_specifier(string)<549>
IDENTIFIER(b)<550>
assignment_operator(=)<551>
STRING(Hi!)<552>
end_operator()<553>
delete_statement()<554>
IDENTIFIER(b)<555>
end_operator()<556>
variable_declarator()<557>
info_operator()<558>
type_specifier(int)<559>
IDENTIFIER(b)<560>
assignment_operator(=)<561>
NUMBER(100)<562>
separation_operator()<563>
IDENTIFIER(c)<564>
assignment_operator(=)<565>
NUMBER(0)<566>
end_operator()<567>
zone_operator(close)<568>
function_declarator()<569>
info_operator()<570>
type_specifier(hex[2])<571>
IDENTIFIER(ReturnHexArray)<575>
parentheses_operator(open)<576>
parentheses_operator(close)<577>
zone_operator(open)<578>
return_statement()<579>
IDENTIFIER(this)<580>
dot_operator()<581>
IDENTIFIER(globJ)<582>
end_operator()<583>
zone_operator(close)<584>
zone_operator(close)<585>
class_declarator()<586>
state_operator()<587>
state_specifier(public)<589>
IDENTIFIER(AnotherClass)<590>
zone_operator(open)<591>
variable_declarator()<592>
state_operator()<593>
state_specifier(public)<595>
info_operator()<596>
type_specifier(int)<597>
IDENTIFIER(a)<598>
assignment_operator(=)<599>
NUMBER(0)<600>
end_operator()<601>
variable_declarator()<602>
state_operator()<603>
state_specifier(private)<605>
info_operator()<606>
type_specifier(int)<607>
IDENTIFIER(b)<608>
assignment_operator(=)<609>
NUMBER(0)<610>
end_operator()<611>
function_declarator()<612>
state_operator()<613>
state_specifier(public)<615>
info_operator()<616>
IDENTIFIER(AnotherClass)<617>
IDENTIFIER(Construct)<618>
parentheses_operator(open)<619>
IDENTIFIER(a)<620>
info_operator()<621>
type_specifier(int)<622>
separation_operator()<623>
IDENTIFIER(b)<624>
info_operator()<625>
type_specifier(int)<626>
parentheses_operator(close)<627>
zone_operator(open)<628>
IDENTIFIER(this)<629>
dot_operator()<630>
IDENTIFIER(a)<631>
assignment_operator(=)<632>
IDENTIFIER(a)<633>
end_operator()<634>
IDENTIFIER(this)<635>
dot_operator()<636>
IDENTIFIER(b)<637>
assignment_operator(=)<638>
IDENTIFIER(b)<639>
end_operator()<640>
zone_operator(close)<641>
zone_operator(close)<642>
class_declarator()<643>
IDENTIFIER(Smth)<644>
zone_operator(open)<645>
function_declarator()<646>
info_operator()<647>
type_specifier(void)<648>
IDENTIFIER(myTest)<649>
parentheses_operator(open)<650>
IDENTIFIER(a)<651>
info_operator()<652>
type_specifier(int)<653>
parentheses_operator(close)<654>
zone_operator(open)<655>
zone_operator(close)<656>
zone_operator(close)<657>
zone_operator(close)<658>
