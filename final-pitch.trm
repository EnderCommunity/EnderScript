STRING(Test 1!)<1>
end_operator()<2>
STRING(Test 2!)<3>
end_operator()<4>
group_declarator()<5>
IDENTIFIER(AnotherLibrary)<6>
zone_operator(open)<7>
class_declarator()<8>
IDENTIFIER(MyClass)<9>
zone_operator(open)<10>
function_declarator()<11>
return_type_operator()<12>
type_specifier(int)<14>
IDENTIFIER(NumOne)<15>
parentheses_operator(open)<16>
parentheses_operator(close)<17>
zone_operator(open)<18>
return_statement()<19>
NUMBER(1)<20>
end_operator()<21>
zone_operator(close)<22>
zone_operator(close)<23>
zone_operator(close)<24>
state_specifier(public)<25>
group_declarator()<26>
IDENTIFIER(LibFilNam)<27>
zone_operator(open)<28>
state_specifier(public)<29>
class_declarator()<30>
IDENTIFIER(section)<31>
zone_operator(open)<32>
function_declarator()<33>
return_type_operator()<34>
type_specifier(string)<36>
IDENTIFIER(myFunction)<37>
parentheses_operator(open)<38>
type_specifier(int)<39>
IDENTIFIER(input)<40>
parentheses_operator(close)<41>
zone_operator(open)<42>
type_specifier(string)<43>
IDENTIFIER(output)<44>
end_operator()<45>
ZONE_LINE(0;)<46>
return_statement()<47>
IDENTIFIER(output)<48>
end_operator()<49>
zone_operator(close)<50>
zone_operator(close)<51>
zone_operator(close)<52>
IDENTIFIER(define)<53>
IDENTIFIER(ZERO)<54>
NUMBER(0)<55>
end_operator()<56>
IDENTIFIER(setsize)<57>
type_specifier(int)<58>
NUMBER(2)<59>
end_operator()<60>
IDENTIFIER(setsize)<61>
type_specifier(double)<62>
NUMBER(10)<63>
end_operator()<64>
state_specifier(public)<65>
group_declarator()<66>
IDENTIFIER(FinalPitch)<67>
zone_operator(open)<68>
state_specifier(public)<69>
class_declarator()<70>
IDENTIFIER(Program)<71>
zone_operator(open)<72>
state_specifier(public)<73>
type_specifier(int)<74>
IDENTIFIER(globA)<75>
assignment_operator(=)<76>
NUMBER(0)<77>
end_operator()<78>
state_specifier(public)<79>
type_specifier(double)<80>
IDENTIFIER(globB)<81>
assignment_operator(=)<82>
NUMBER(0.0)<83>
end_operator()<84>
state_specifier(public)<85>
type_specifier(float)<86>
IDENTIFIER(globC)<87>
assignment_operator(=)<88>
NUMBER(0.0)<89>
end_operator()<90>
state_specifier(public)<91>
type_specifier(char)<92>
IDENTIFIER(globD)<93>
assignment_operator(=)<94>
CHAR(D)<95>
end_operator()<96>
state_specifier(public)<97>
type_specifier(string)<98>
IDENTIFIER(globE)<99>
assignment_operator(=)<100>
STRING(Global E)<101>
end_operator()<102>
state_specifier(public)<103>
type_specifier(bool)<104>
IDENTIFIER(globF)<105>
assignment_operator(=)<106>
BOOLEAN(true)<107>
end_operator()<108>
state_specifier(public)<109>
type_specifier(file)<110>
IDENTIFIER(globG)<111>
assignment_operator(=)<112>
IDENTIFIER(new)<113>
IDENTIFIER(FileStream)<114>
parentheses_operator(open)<115>
STRING(path/to/my/file.txt)<116>
parentheses_operator(close)<117>
end_operator()<118>
state_specifier(public)<119>
type_specifier(hex)<120>
IDENTIFIER(globH)<121>
assignment_operator(=)<122>
HEX(FF)<123>
end_operator()<124>
state_specifier(public)<125>
type_specifier(string[1])<126>
IDENTIFIER(globI)<129>
assignment_operator(=)<130>
IDENTIFIER(new)<131>
IDENTIFIER(Array)<132>
return_type_operator()<133>
type_specifier(string[1])<135>
parentheses_operator(open)<138>
NUMBER(6)<139>
parentheses_operator(close)<140>
end_operator()<141>
state_specifier(private)<142>
type_specifier(hex[2])<143>
IDENTIFIER(globJ)<147>
assignment_operator(=)<148>
IDENTIFIER(new)<149>
IDENTIFIER(Array)<150>
return_type_operator()<151>
type_specifier(hex[2])<153>
parentheses_operator(open)<157>
NUMBER(8)<158>
separation_operator()<159>
NUMBER(2)<160>
parentheses_operator(close)<161>
end_operator()<162>
state_specifier(public)<163>
function_declarator()<164>
return_type_operator()<165>
type_specifier(int)<167>
IDENTIFIER(Main)<168>
parentheses_operator(open)<169>
type_specifier(string[1])<170>
IDENTIFIER(envi)<173>
separation_operator()<174>
type_specifier(int)<175>
IDENTIFIER(length)<176>
parentheses_operator(close)<177>
zone_operator(open)<178>
IDENTIFIER(Func)<179>
parentheses_operator(open)<180>
parentheses_operator(close)<181>
end_operator()<182>
type_specifier(^int)<183>
IDENTIFIER(a)<185>
assignment_operator(=)<186>
NUMBER(0)<187>
end_operator()<188>
type_specifier(int)<189>
IDENTIFIER(b)<190>
assignment_operator(=)<191>
NUMBER(1)<192>
end_operator()<193>
type_specifier(^int)<194>
IDENTIFIER(c)<196>
assignment_operator(=)<197>
IDENTIFIER(Test)<198>
parentheses_operator(open)<199>
IDENTIFIER(a)<200>
separation_operator()<201>
NUMBER(1)<202>
parentheses_operator(close)<203>
end_operator()<204>
IDENTIFIER(a)<205>
assignment_operator(=)<206>
NUMBER(1)<207>
separation_operator()<208>
IDENTIFIER(c)<209>
assignment_operator(=)<210>
NUMBER(5)<211>
end_operator()<212>
IDENTIFIER(PlusOne)<213>
parentheses_operator(open)<214>
ref_statement()<215>
IDENTIFIER(b)<216>
parentheses_operator(close)<217>
end_operator()<218>
type_specifier(bool)<219>
IDENTIFIER(myTest)<220>
assignment_operator(=)<221>
BOOLEAN(false)<222>
end_operator()<223>
IDENTIFIER(if)<224>
parentheses_operator(open)<225>
IDENTIFIER(myTest)<226>
comparison_operator(=)<227>
BOOLEAN(true)<229>
parentheses_operator(close)<230>
zone_operator(open)<231>
zone_operator(close)<232>
IDENTIFIER(if)<233>
parentheses_operator(open)<234>
IDENTIFIER(myTest)<235>
comparison_operator(!)<236>
BOOLEAN(true)<238>
parentheses_operator(close)<239>
zone_operator(open)<240>
zone_operator(close)<241>
IDENTIFIER(if)<242>
parentheses_operator(open)<243>
NUMBER(1)<244>
comparison_operator(>)<245>
NUMBER(5)<247>
comparison_operator(|)<248>
NUMBER(1)<250>
comparison_operator(~>)<251>
NUMBER(5)<252>
comparison_operator(|)<253>
parentheses_operator(open)<255>
NUMBER(1)<256>
comparison_operator(~>)<257>
NUMBER(1)<258>
comparison_operator(&)<259>
NUMBER(1)<261>
comparison_operator(~<)<262>
NUMBER(1)<263>
parentheses_operator(close)<264>
parentheses_operator(close)<265>
zone_operator(open)<266>
zone_operator(close)<267>
IDENTIFIER(if)<268>
parentheses_operator(open)<269>
NUMBER(1)<270>
comparison_operator(<)<271>
NUMBER(5)<273>
comparison_operator(|)<274>
NUMBER(1)<276>
comparison_operator(~<)<277>
NUMBER(5)<278>
parentheses_operator(close)<279>
zone_operator(open)<280>
zone_operator(close)<281>
return_statement()<282>
NUMBER(0)<283>
end_operator()<284>
zone_operator(close)<285>
state_specifier(private)<286>
function_declarator()<287>
return_type_operator()<288>
type_specifier(void)<290>
IDENTIFIER(Func)<291>
parentheses_operator(open)<292>
parentheses_operator(close)<293>
zone_operator(open)<294>
zone_operator(close)<295>
state_specifier(public)<296>
function_declarator()<297>
return_type_operator()<298>
type_specifier(^int)<300>
IDENTIFIER(Test)<302>
parentheses_operator(open)<303>
type_specifier(^int)<304>
IDENTIFIER(a)<306>
separation_operator()<307>
type_specifier(int)<308>
IDENTIFIER(b)<309>
parentheses_operator(close)<310>
zone_operator(open)<311>
IDENTIFIER(a)<312>
assignment_operator(=)<313>
parentheses_operator(open)<314>
type_specifier(^int)<315>
parentheses_operator(close)<317>
IDENTIFIER(b)<318>
end_operator()<319>
return_statement()<320>
IDENTIFIER(a)<321>
end_operator()<322>
zone_operator(close)<323>
state_specifier(public)<324>
function_declarator()<325>
return_type_operator()<326>
type_specifier(void)<328>
IDENTIFIER(PlusOne)<329>
parentheses_operator(open)<330>
ref_statement()<331>
type_specifier(int)<332>
IDENTIFIER(a)<333>
parentheses_operator(close)<334>
zone_operator(open)<335>
IDENTIFIER(a)<336>
assignment_short_operator(+)<337>
end_operator()<339>
zone_operator(close)<340>
state_specifier(public)<341>
function_declarator()<342>
return_type_operator()<343>
type_specifier(void)<345>
IDENTIFIER(myTests)<346>
parentheses_operator(open)<347>
parentheses_operator(close)<348>
zone_operator(open)<349>
type_specifier(bool)<350>
IDENTIFIER(myTest)<351>
assignment_operator(=)<352>
BOOLEAN(false)<353>
end_operator()<354>
type_specifier(int)<355>
IDENTIFIER(a)<356>
assignment_operator(=)<357>
NUMBER(0)<358>
separation_operator()<359>
IDENTIFIER(b)<360>
assignment_operator(=)<361>
NUMBER(0)<362>
end_operator()<363>
type_specifier(double)<364>
IDENTIFIER(c)<365>
assignment_operator(=)<366>
NUMBER(4)<367>
separation_operator()<368>
IDENTIFIER(d)<369>
assignment_operator(=)<370>
NUMBER(3)<371>
end_operator()<372>
IDENTIFIER(myTest)<373>
assignment_short_operator(!)<374>
end_operator()<376>
IDENTIFIER(myTest)<377>
assignment_operator(=)<378>
negative_operator()<379>
IDENTIFIER(myTest)<380>
end_operator()<381>
IDENTIFIER(a)<382>
assignment_short_operator(+)<383>
end_operator()<385>
IDENTIFIER(a)<386>
assignment_operator(+)<387>
NUMBER(1)<389>
end_operator()<390>
IDENTIFIER(a)<391>
assignment_operator(=)<392>
IDENTIFIER(a)<393>
maths_operator(+)<394>
NUMBER(1)<395>
end_operator()<396>
IDENTIFIER(b)<397>
assignment_short_operator(-)<398>
end_operator()<400>
IDENTIFIER(b)<401>
assignment_operator(-)<402>
NUMBER(1)<404>
end_operator()<405>
IDENTIFIER(b)<406>
assignment_operator(=)<407>
IDENTIFIER(b)<408>
maths_operator(-)<409>
NUMBER(1)<410>
end_operator()<411>
IDENTIFIER(c)<412>
assignment_operator(%)<413>
IDENTIFIER(d)<415>
end_operator()<416>
IDENTIFIER(c)<417>
maths_operator(%)<418>
IDENTIFIER(d)<419>
end_operator()<420>
IDENTIFIER(c)<421>
assignment_operator(/)<422>
NUMBER(0.5)<424>
end_operator()<425>
IDENTIFIER(c)<426>
maths_operator(/)<427>
IDENTIFIER(d)<428>
end_operator()<429>
IDENTIFIER(c)<430>
assignment_operator(*)<431>
IDENTIFIER(d)<433>
end_operator()<434>
IDENTIFIER(c)<435>
assignment_operator(=)<436>
IDENTIFIER(c)<437>
maths_operator(*)<438>
IDENTIFIER(d)<439>
end_operator()<440>
zone_operator(close)<441>
function_declarator()<442>
return_type_operator()<443>
type_specifier(string)<445>
IDENTIFIER(myStringTest)<446>
parentheses_operator(open)<447>
type_specifier(string)<448>
IDENTIFIER(a)<449>
parentheses_operator(close)<450>
zone_operator(open)<451>
type_specifier(string)<452>
IDENTIFIER(b)<453>
assignment_operator(=)<454>
STRING(Hi!)<455>
end_operator()<456>
delete_statement()<457>
IDENTIFIER(b)<458>
end_operator()<459>
type_specifier(int)<460>
IDENTIFIER(b)<461>
assignment_operator(=)<462>
NUMBER(1)<463>
end_operator()<464>
zone_operator(close)<465>
function_declarator()<466>
return_type_operator()<467>
type_specifier(hex[2])<469>
IDENTIFIER(ReturnHexArray)<473>
parentheses_operator(open)<474>
parentheses_operator(close)<475>
zone_operator(open)<476>
return_statement()<477>
IDENTIFIER(this)<478>
dot_operator()<479>
IDENTIFIER(globJ)<480>
end_operator()<481>
zone_operator(close)<482>
zone_operator(close)<483>
state_specifier(public)<484>
class_declarator()<485>
IDENTIFIER(AnotherClass)<486>
zone_operator(open)<487>
state_specifier(public)<488>
type_specifier(int)<489>
IDENTIFIER(a)<490>
assignment_operator(=)<491>
NUMBER(0)<492>
end_operator()<493>
state_specifier(private)<494>
type_specifier(int)<495>
IDENTIFIER(b)<496>
assignment_operator(=)<497>
NUMBER(0)<498>
end_operator()<499>
function_declarator()<500>
return_type_operator()<501>
IDENTIFIER(AnotherClass)<503>
IDENTIFIER(Construct)<504>
parentheses_operator(open)<505>
type_specifier(int)<506>
IDENTIFIER(a)<507>
separation_operator()<508>
type_specifier(int)<509>
IDENTIFIER(b)<510>
parentheses_operator(close)<511>
zone_operator(open)<512>
IDENTIFIER(this)<513>
dot_operator()<514>
IDENTIFIER(a)<515>
assignment_operator(=)<516>
IDENTIFIER(a)<517>
end_operator()<518>
IDENTIFIER(this)<519>
dot_operator()<520>
IDENTIFIER(b)<521>
assignment_operator(=)<522>
IDENTIFIER(b)<523>
end_operator()<524>
zone_operator(close)<525>
zone_operator(close)<526>
class_declarator()<527>
IDENTIFIER(Smth)<528>
zone_operator(open)<529>
zone_operator(close)<530>
zone_operator(close)<531>
