STRING(Test 1!)<1>
STRING(Test 2!)<3>
DEFINE_GROUP(AnotherLibrary,1)<5>
DEFINE_CLASS(AnotherLibrary.MyClass,1)<8>
DEFINE_FUNCTION(AnotherLibrary.MyClass.NumOne,int,1)<14>
parentheses_operator(open)<15>
parentheses_operator(close)<16>
return_statement()<18>
NUMBER(1)<19>
END_DEFINITION()<21>
END_DEFINITION()<22>
END_DEFINITION()<23>
DEFINE_GROUP(LibFilNam,1)<24>
DEFINE_CLASS(LibFilNam.section,1)<30>
DEFINE_FUNCTION(LibFilNam.section.myFunction,string,1)<39>
parentheses_operator(open)<40>
IDENTIFIER(input)<41>
info_operator()<42>
type_specifier(int)<43>
parentheses_operator(close)<44>
DEFINE_VARIABLE(LibFilNam.section.output,string,1)<49>
ZONE_LINE(0;)<51>
return_statement()<52>
IDENTIFIER(output)<53>
END_DEFINITION()<55>
END_DEFINITION()<56>
END_DEFINITION()<57>
SETSIZE(int,2)<58>
SETSIZE(double,10)<62>
DEFINE_GROUP(FinalPitch,1)<66>
DEFINE_CLASS(FinalPitch.Program,1)<72>
DEFINE_VARIABLE(FinalPitch.Program.globA,int,1)<84>
ASSIGN(globA)<86>:
NUMBER(0)<86>
;
DEFINE_VARIABLE(FinalPitch.Program.globB,double,1)<94>
ASSIGN(globB)<96>:
DECNUMBER(0.0)<96>
;
DEFINE_VARIABLE(FinalPitch.Program.globC,float,1)<104>
ASSIGN(globC)<106>:
DECNUMBER(0.0)<106>
;
DEFINE_VARIABLE(FinalPitch.Program.globD,char,1)<114>
ASSIGN(globD)<116>:
CHAR(D)<116>
;
DEFINE_VARIABLE(FinalPitch.Program.globE,string,1)<124>
ASSIGN(globE)<126>:
STRING(Global E)<126>
;
DEFINE_VARIABLE(FinalPitch.Program.globF,bool,1)<134>
ASSIGN(globF)<136>:
BOOLEAN(true)<136>
;
DEFINE_VARIABLE(FinalPitch.Program.globG,file,1)<144>
ASSIGN(globG)<146>:
IDENTIFIER(types)<146>
dot_operator()<147>
IDENTIFIER(create)<148>
dot_operator()<149>
IDENTIFIER(fileStream)<150>
parentheses_operator(open)<151>
STRING(path/to/my/file.txt)<152>
parentheses_operator(close)<153>
;
DEFINE_VARIABLE(FinalPitch.Program.globH,hex,1)<161>
ASSIGN(globH)<163>:
HEX(FF)<163>
;
DEFINE_VARIABLE(FinalPitch.Program.globI,string[1],1)<173>
ASSIGN(globI)<175>:
IDENTIFIER(types)<175>
dot_operator()<176>
IDENTIFIER(create)<177>
dot_operator()<178>
IDENTIFIER(Array)<179>
info_operator()<180>
type_specifier(string[1])<181>
parentheses_operator(open)<184>
NUMBER(6)<185>
parentheses_operator(close)<186>
;
DEFINE_VARIABLE(FinalPitch.Program.globJ,hex[2],0)<197>
ASSIGN(globJ)<199>:
IDENTIFIER(types)<199>
dot_operator()<200>
IDENTIFIER(create)<201>
dot_operator()<202>
IDENTIFIER(Array)<203>
info_operator()<204>
type_specifier(hex[1])<205>
parentheses_operator(open)<208>
NUMBER(8)<209>
separation_operator()<210>
NUMBER(2)<211>
parentheses_operator(close)<212>
;
DEFINE_FUNCTION(FinalPitch.Program.Main,int,1)<220>
parentheses_operator(open)<221>
IDENTIFIER(envi)<222>
info_operator()<223>
type_specifier(string[1])<224>
separation_operator()<227>
IDENTIFIER(length)<228>
info_operator()<229>
type_specifier(int)<230>
parentheses_operator(close)<231>
IDENTIFIER(Func)<233>
parentheses_operator(open)<234>
parentheses_operator(close)<235>
DEFINE_VARIABLE(FinalPitch.Program.a,^int,1)<241>
ASSIGN(a)<243>:
NUMBER(0)<243>
;
DEFINE_VARIABLE(FinalPitch.Program.b,int,1)<248>
ASSIGN(b)<250>:
NUMBER(1)<250>
;
DEFINE_VARIABLE(FinalPitch.Program.c,^int,1)<256>
ASSIGN(c)<258>:
IDENTIFIER(Test)<258>
parentheses_operator(open)<259>
IDENTIFIER(a)<260>
separation_operator()<261>
NUMBER(1)<262>
parentheses_operator(close)<263>
;
IDENTIFIER(a)<265>
assignment_operator(=)<266>
NUMBER(1)<267>
separation_operator()<268>
IDENTIFIER(c)<269>
assignment_operator(=)<270>
NUMBER(5)<271>
IDENTIFIER(a)<273>
assignment_operator(=)<274>
IDENTIFIER(c)<275>
assignment_operator(=)<276>
NUMBER(6)<277>
IDENTIFIER(PlusOne)<279>
parentheses_operator(open)<280>
IDENTIFIER(b)<281>
info_operator()<282>
ref_statement()<283>
parentheses_operator(close)<284>
DEFINE_VARIABLE(FinalPitch.Program.myTest,bool,1)<289>
ASSIGN(myTest)<291>:
BOOLEAN(false)<291>
;
IF()<294>:
IDENTIFIER(myTest)<295>
comparison_operator(=)<296>
BOOLEAN(true)<298>
;
zone_operator(open)<300>
END_DEFINITION()<301>
else_statement()<302>
zone_operator(open)<303>
END_DEFINITION()<304>
IF()<306>:
IDENTIFIER(myTest)<307>
comparison_operator(!)<308>
BOOLEAN(true)<310>
;
zone_operator(open)<312>
END_DEFINITION()<313>
IF()<315>:
NUMBER(1)<316>
comparison_operator(>)<317>
NUMBER(5)<319>
comparison_operator(|)<320>
NUMBER(1)<322>
comparison_operator(~>)<323>
NUMBER(5)<324>
comparison_operator(|)<325>
parentheses_operator(open)<327>
NUMBER(1)<328>
comparison_operator(~>)<329>
NUMBER(1)<330>
comparison_operator(&)<331>
NUMBER(1)<333>
comparison_operator(~<)<0>
NUMBER(1)<335>
parentheses_operator(close)<336>
;
zone_operator(open)<338>
END_DEFINITION()<339>
IF()<341>:
NUMBER(1)<342>
comparison_operator(<)<0>
NUMBER(5)<345>
comparison_operator(|)<346>
NUMBER(1)<348>
comparison_operator(~<)<0>
NUMBER(5)<350>
;
zone_operator(open)<352>
END_DEFINITION()<353>
IDENTIFIER(io)<354>
dot_operator()<355>
IDENTIFIER(console)<356>
dot_operator()<357>
IDENTIFIER(print)<358>
parentheses_operator(open)<359>
STRING(Hello there!)<360>
parentheses_operator(close)<361>
return_statement()<363>
NUMBER(0)<364>
END_DEFINITION()<366>
DEFINE_FUNCTION(FinalPitch.Program.Func,void,0)<373>
parentheses_operator(open)<374>
parentheses_operator(close)<375>
END_DEFINITION()<377>
DEFINE_FUNCTION(FinalPitch.Program.Test,^int,1)<385>
parentheses_operator(open)<386>
IDENTIFIER(a)<387>
info_operator()<388>
type_specifier(^int)<389>
separation_operator()<391>
IDENTIFIER(b)<392>
info_operator()<393>
type_specifier(int)<394>
parentheses_operator(close)<395>
IDENTIFIER(a)<397>
assignment_operator(=)<398>
parentheses_operator(open)<399>
type_specifier(^int)<400>
parentheses_operator(close)<402>
IDENTIFIER(b)<403>
return_statement()<405>
IDENTIFIER(a)<406>
END_DEFINITION()<408>
DEFINE_FUNCTION(FinalPitch.Program.PlusOne,void,1)<415>
parentheses_operator(open)<416>
IDENTIFIER(a)<417>
info_operator()<418>
type_specifier(int)<419>
info_operator()<420>
ref_statement()<421>
parentheses_operator(close)<422>
IDENTIFIER(a)<424>
assignment_short_operator(+)<425>
END_DEFINITION()<428>
DEFINE_FUNCTION(FinalPitch.Program.myTests,void,1)<435>
parentheses_operator(open)<436>
parentheses_operator(close)<437>
DEFINE_VARIABLE(FinalPitch.Program.myTest,bool,1)<442>
ASSIGN(myTest)<444>:
BOOLEAN(false)<444>
;
DEFINE_VARIABLE(FinalPitch.Program.a,int,1)<449>
ASSIGN(a)<451>:
NUMBER(0)<451>
;
DEFINE_VARIABLE(b,int,1)<453>
ASSIGN(b)<455>:
NUMBER(0)<455>
;
DEFINE_VARIABLE(FinalPitch.Program.c,double,1)<460>
ASSIGN(c)<462>:
NUMBER(4)<462>
;
DEFINE_VARIABLE(d,double,1)<464>
ASSIGN(d)<466>:
NUMBER(3)<466>
;
IDENTIFIER(myTest)<468>
assignment_short_operator(!)<469>
IDENTIFIER(myTest)<472>
assignment_operator(=)<473>
negative_operator()<474>
IDENTIFIER(myTest)<475>
IDENTIFIER(a)<477>
assignment_short_operator(+)<478>
IDENTIFIER(a)<481>
assignment_operator(+)<482>
NUMBER(1)<484>
IDENTIFIER(a)<486>
assignment_operator(=)<487>
IDENTIFIER(a)<488>
maths_operator(+)<489>
NUMBER(1)<490>
IDENTIFIER(b)<492>
assignment_short_operator(-)<493>
IDENTIFIER(b)<496>
assignment_operator(-)<497>
NUMBER(1)<499>
IDENTIFIER(b)<501>
assignment_operator(=)<502>
IDENTIFIER(b)<503>
maths_operator(-)<504>
NUMBER(1)<505>
IDENTIFIER(c)<507>
assignment_operator(%)<508>
IDENTIFIER(d)<510>
IDENTIFIER(c)<512>
maths_operator(%)<513>
IDENTIFIER(d)<514>
IDENTIFIER(c)<516>
assignment_operator(/)<517>
DECNUMBER(0.5)<519>
IDENTIFIER(c)<521>
maths_operator(/)<522>
IDENTIFIER(d)<523>
IDENTIFIER(c)<525>
assignment_operator(*)<526>
IDENTIFIER(d)<528>
IDENTIFIER(c)<530>
assignment_operator(=)<531>
IDENTIFIER(c)<532>
maths_operator(*)<533>
IDENTIFIER(d)<534>
END_DEFINITION()<536>
DEFINE_FUNCTION(FinalPitch.Program.myStringTest,string,1)<540>
parentheses_operator(open)<541>
IDENTIFIER(a)<542>
info_operator()<543>
type_specifier(string)<544>
parentheses_operator(close)<545>
DEFINE_VARIABLE(FinalPitch.Program.b,string,1)<550>
ASSIGN(b)<552>:
STRING(Hi!)<552>
;
DELETE(b)<555>
DEFINE_VARIABLE(FinalPitch.Program.b,int,1)<560>
ASSIGN(b)<562>:
NUMBER(100)<562>
;
DEFINE_VARIABLE(c,int,1)<564>
ASSIGN(c)<566>:
NUMBER(0)<566>
;
DELETE(d)<569>
DELETE(c)<571>
END_DEFINITION()<573>
DEFINE_FUNCTION(FinalPitch.Program.ReturnHexArray,hex[2],1)<580>
parentheses_operator(open)<581>
parentheses_operator(close)<582>
return_statement()<584>
IDENTIFIER(this)<585>
dot_operator()<586>
IDENTIFIER(globJ)<587>
END_DEFINITION()<589>
END_DEFINITION()<590>
DEFINE_CLASS(FinalPitch.AnotherClass,1)<591>
DEFINE_VARIABLE(FinalPitch.AnotherClass.a,int,1)<603>
ASSIGN(a)<605>:
NUMBER(0)<605>
;
DEFINE_VARIABLE(FinalPitch.AnotherClass.b,int,0)<613>
ASSIGN(b)<615>:
NUMBER(0)<615>
;
DEFINE_FUNCTION(FinalPitch.AnotherClass.Construct,AnotherClass,1)<623>
parentheses_operator(open)<624>
IDENTIFIER(a)<625>
info_operator()<626>
type_specifier(int)<627>
separation_operator()<628>
IDENTIFIER(b)<629>
info_operator()<630>
type_specifier(int)<631>
parentheses_operator(close)<632>
IDENTIFIER(this)<634>
dot_operator()<635>
IDENTIFIER(a)<636>
assignment_operator(=)<637>
IDENTIFIER(a)<638>
IDENTIFIER(this)<640>
dot_operator()<641>
IDENTIFIER(b)<642>
assignment_operator(=)<643>
IDENTIFIER(b)<644>
END_DEFINITION()<646>
END_DEFINITION()<647>
DEFINE_CLASS(FinalPitch.Smth,1)<648>
DEFINE_FUNCTION(FinalPitch.Smth.myTest,void,1)<654>
parentheses_operator(open)<655>
IDENTIFIER(a)<656>
info_operator()<657>
type_specifier(int)<658>
parentheses_operator(close)<659>
END_DEFINITION()<661>
END_DEFINITION()<662>
END_DEFINITION()<663>
