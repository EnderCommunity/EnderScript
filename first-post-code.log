[?][LOG SYSTEM] => Created a log file successfully!
[!][Compiler Manager] => The workstation directory has been set to "E:\files\EnderCommunity\Projects\Murmur\"
[?][Compiler Manager] => Testing the `writeLogLine` function
[?][Compiler Manager] => Starting the preprocessor.
[?][Preprocessor] => Preprocessor started!
[?][Preprocessor][1, 1] => New processing loop started.
[!][Preprocessor] => /*
[?][Preprocessor][1, 1] => A multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][2, 1] => New processing loop started.
[!][Preprocessor] => Murmur | (C) EnderCommunity
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][3, 1] => New processing loop started.
[!][Preprocessor] => --------------------------------------------------------------------------------
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][4, 1] => New processing loop started.
[!][Preprocessor] => This is a pitch file for Murmur that will include the general syntax for
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][5, 1] => New processing loop started.
[!][Preprocessor] => Murmur, and all the functions that it can use.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][6, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][7, 1] => New processing loop started.
[!][Preprocessor] => This is Murmur code that can be processed by the first-post compiler!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][8, 1] => New processing loop started.
[!][Preprocessor] => */
[?][Preprocessor][8, 2] => The end of the multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][9, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][10, 1] => New processing loop started.
[!][Preprocessor] => //(!) All the functions that start with a # are preprocessor functions
[?][Preprocessor][10, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][11, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][12, 1] => New processing loop started.
[!][Preprocessor] => #import "path/to/myfile.esf"; //This will allow you to import Murmur files!
[?][Preprocessor][12, 31] => A single line comment has been detected!
[?][Preprocessor][12, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][13, 1] => New processing loop started.
[!][Preprocessor] => #import "path/to/mymodule1.esmf" as string Module1; //This will allow you to import Murmur modules!
[?][Preprocessor][13, 53] => A single line comment has been detected!
[?][Preprocessor][13, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][14, 1] => New processing loop started.
[!][Preprocessor] => function Module2;
[?][Preprocessor][14, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][15, 1] => New processing loop started.
[!][Preprocessor] => #import "path/to/mymodule2.esmf" as Module2; //This will allow you to import Murmur modules!
[?][Preprocessor][15, 46] => A single line comment has been detected!
[?][Preprocessor][15, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][16, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][17, 1] => New processing loop started.
[!][Preprocessor] => #define ZERO 0 //You can use the `#define` function to define a variable that will be replaced by the provided value before the execution of this code
[?][Preprocessor][17, 16] => A single line comment has been detected!
[?][Preprocessor][17, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][18, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][19, 1] => New processing loop started.
[!][Preprocessor] => //(!) It is recommended that you start variable names with a capital letter!
[?][Preprocessor][19, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][20, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][21, 1] => New processing loop started.
[!][Preprocessor] => int Num1 = 0, Num2 = 1, Num3 = 2; //Integers use the type 'int'
[?][Preprocessor][21, 35] => A single line comment has been detected!
[?][Preprocessor][21, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][22, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][23, 1] => New processing loop started.
[!][Preprocessor] => float Floa1 = 0.00, Floa2 = 0.01, Floa3 = 0.02; //Decimal numbers use the type 'float'
[?][Preprocessor][23, 49] => A single line comment has been detected!
[?][Preprocessor][23, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][24, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][25, 1] => New processing loop started.
[!][Preprocessor] => double Doub1 = 0.00, Doub2 = 0.01, Doub3 = 0.02; //Decimal numbers, that may be long, use the type 'double'
[?][Preprocessor][25, 50] => A single line comment has been detected!
[?][Preprocessor][25, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][26, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][27, 1] => New processing loop started.
[!][Preprocessor] => char Cha1 = 'A', Cha2 = 'B', Cha3 = 'C'; //You can also use normal quotes ("E"), characters use the type 'char'
[?][Preprocessor][27, 42] => A single line comment has been detected!
[?][Preprocessor][27, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][28, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][29, 1] => New processing loop started.
[!][Preprocessor] => string Str1 = "Hello there!", Str2 = "I'm a string!", Str3 = "I can be up to 2048 characters in length!"; //You can use variables with the type 'string' to store text
[?][Preprocessor][29, 107] => A single line comment has been detected!
[?][Preprocessor][29, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][30, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][31, 1] => New processing loop started.
[!][Preprocessor] => bool Bool1 = true, Bool2 = false; //Boolean variables use the type 'bool'
[?][Preprocessor][31, 35] => A single line comment has been detected!
[?][Preprocessor][31, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][32, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][33, 1] => New processing loop started.
[!][Preprocessor] => file File1 = new FileStream("path/filename.txt"), File2 = new FileStream("path/filename.txt", false), File3 = new FileStream("path/filename.txt", true); //the 2nd argument determines whether the file should be in a read-only mode or not. It's set to 'false' by default.
[?][Preprocessor][33, 154] => A single line comment has been detected!
[?][Preprocessor][33, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][34, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][35, 1] => New processing loop started.
[!][Preprocessor] => /*
[?][Preprocessor][35, 1] => A multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][36, 1] => New processing loop started.
[!][Preprocessor] => You could also do this: `new FileStream::File(...)`;
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][37, 1] => New processing loop started.
[!][Preprocessor] => */
[?][Preprocessor][37, 2] => The end of the multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][38, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][39, 1] => New processing loop started.
[!][Preprocessor] => delete Num1, Cha2, File, HexData, Obj1; //You can delete variables. What happens when you delete a variable comes down to the type of the variable itself (e.g. When you delete a variable of the type 'file', the file stream will be closed)
[?][Preprocessor][39, 41] => A single line comment has been detected!
[?][Preprocessor][39, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][40, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][41, 1] => New processing loop started.
[!][Preprocessor] => /*
[?][Preprocessor][41, 1] => A multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][42, 1] => New processing loop started.
[!][Preprocessor] => delete Const3; //This will result in an error;
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][43, 1] => New processing loop started.
[!][Preprocessor] => Const3 = new FileStream("path/filename.txt"); //This too!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][44, 1] => New processing loop started.
[!][Preprocessor] => */
[?][Preprocessor][44, 2] => The end of the multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][45, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][46, 1] => New processing loop started.
[!][Preprocessor] => int[] Array1 = new Array::Int(10);
[?][Preprocessor][46, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][47, 1] => New processing loop started.
[!][Preprocessor] => string[] Array2 = new Array::String(10);
[?][Preprocessor][47, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][48, 1] => New processing loop started.
[!][Preprocessor] => file[] Array3 = new Array::File(10);
[?][Preprocessor][48, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][49, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][50, 1] => New processing loop started.
[!][Preprocessor] => Array1 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
[?][Preprocessor][50, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][51, 1] => New processing loop started.
[!][Preprocessor] => Array2 = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"};
[?][Preprocessor][51, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][52, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][53, 1] => New processing loop started.
[!][Preprocessor] => function::Int Func1(int a){
[?][Preprocessor][53, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][54, 5] => New processing loop started.
[!][Preprocessor] => return a;
[?][Preprocessor][54, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][55, 1] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][55, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][56, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][57, 1] => New processing loop started.
[!][Preprocessor] => function::Void Func2(){
[?][Preprocessor][57, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][58, 5] => New processing loop started.
[!][Preprocessor] => //
[?][Preprocessor][58, 5] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][59, 1] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][59, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][60, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][61, 1] => New processing loop started.
[!][Preprocessor] => function Func3 = function::Int(){
[?][Preprocessor][61, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][62, 5] => New processing loop started.
[!][Preprocessor] => return 0;
[?][Preprocessor][62, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][63, 1] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][63, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][64, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][65, 1] => New processing loop started.
[!][Preprocessor] => int Test1 = 0;
[?][Preprocessor][65, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][66, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][67, 1] => New processing loop started.
[!][Preprocessor] => function::Int Exm(int a, function b, function::Int c){
[?][Preprocessor][67, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][68, 5] => New processing loop started.
[!][Preprocessor] => keep int b = a; //This variable can be accessed the next time this function gets executed!
[?][Preprocessor][68, 21] => A single line comment has been detected!
[?][Preprocessor][68, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][69, 5] => New processing loop started.
[!][Preprocessor] => b; //You can't really know what is the output of this function!
[?][Preprocessor][69, 8] => A single line comment has been detected!
[?][Preprocessor][69, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][70, 5] => New processing loop started.
[!][Preprocessor] => c; //You know that this is a function that returns an int!
[?][Preprocessor][70, 8] => A single line comment has been detected!
[?][Preprocessor][70, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][71, 1] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][71, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][72, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][73, 1] => New processing loop started.
[!][Preprocessor] => exit 0; //Exit the program with a success code! You could use `SUCCESS` for 0, or 'FAILURE' for -1
[?][Preprocessor][73, 9] => A single line comment has been detected!
[?][Preprocessor][73, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][74, 1] => New processing loop started.
[!][Preprocessor] => //exit FAILURE; //Exit the program with a failure code!
[?][Preprocessor][74, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][75, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][76, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][77, 1] => New processing loop started.
[!][Preprocessor] => //You can think if functions variable management as it is in classes in C#!
[?][Preprocessor][77, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][78, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][79, 1] => New processing loop started.
[!][Preprocessor] => /*
[?][Preprocessor][79, 1] => A multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][80, 1] => New processing loop started.
[!][Preprocessor] => function::Int Hmm(function::function::c Callback){ //This is wrong, nested type determinations aren't supported!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][81, 5] => New processing loop started.
[!][Preprocessor] => //
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][82, 1] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][83, 1] => New processing loop started.
[!][Preprocessor] => */
[?][Preprocessor][83, 2] => The end of the multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][84, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][85, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][86, 1] => New processing loop started.
[!][Preprocessor] => //Maybe don't give developers access to these functions
[?][Preprocessor][86, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][87, 1] => New processing loop started.
[!][Preprocessor] => /*Allocate<int> AllocatedNumber = 10; //You can use the 'alloc<type>' identifier to allocate a specific amount of bytes
[?][Preprocessor][87, 1] => A multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][88, 1] => New processing loop started.
[!][Preprocessor] => Pointer<int> Poi1 = Num1;
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][89, 1] => New processing loop started.
[!][Preprocessor] => Pointer<double> Poi2 = Doub1;*/
[?][Preprocessor][89, 31] => The end of the multi-linear comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][90, 1] => New processing loop started.
[!][Preprocessor] => //point a as fjekfakwfwa;
[?][Preprocessor][90, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][91, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][92, 1] => New processing loop started.
[!][Preprocessor] => //You could make it so the user can specify a block of code that will not be
[?][Preprocessor][92, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][93, 1] => New processing loop started.
[!][Preprocessor] => //parsed by the compiler. It would be basically a block of code that will run
[?][Preprocessor][93, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][94, 1] => New processing loop started.
[!][Preprocessor] => //C code without any parser interferance.
[?][Preprocessor][94, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][95, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][96, 1] => New processing loop started.
[!][Preprocessor] => //Murmur should automatically detect the use of libraries, and include them in the final C code!
[?][Preprocessor][96, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][97, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][98, 1] => New processing loop started.
[!][Preprocessor] => //(Introduce Rules in Murmur???)
[?][Preprocessor][98, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => Last line detected!
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][99, 1] => New processing loop started.
[!][Preprocessor] => //(Introduce Rules in Murmur???)
[?][Preprocessor][99, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Compiler Manager] => Closed all files sessions.
[?][Compiler Manager] => Closed the current workstation.
[?][Compiler Manager] => Task finished successfully! (Ending process)
