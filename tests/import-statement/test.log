[?][LOG SYSTEM] => Created a log file successfully!
[!][Compiler Manager] => The workstation directory has been set to "E:\files\EnderCommunity\Projects\Murmur\tests\import-statement\"
[?][Compiler Manager] => Testing the `writeLogLine` function
[?][Compiler Manager] => Starting the preprocessor.
[?][Preprocessor] => Preprocessor started!
[?][Preprocessor] => The header has been detected!
[?][Preprocessor] => The header flags have been processed successfully!
[?][Preprocessor][2, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][3, 1] => New processing loop started.
[!][Preprocessor] => using system.io;
[?][Preprocessor][3, 1] => Checking for preprocessor methods...
[?][Preprocessor][3, 1] => A 'using' statement has been detected!
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][4, 1] => New processing loop started.
[!][Preprocessor] => import "file.mur"; //Import my other file!
[?][Preprocessor][4, 20] => A single line comment has been detected!
[?][Preprocessor][4, 1] => Checking for preprocessor methods...
[?][Preprocessor][4, 1] => An 'import' statement has been detected!
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][5, 1] => New processing loop started.
[!][Preprocessor] => //      ^ or "./file.mur",
[?][Preprocessor][5, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][6, 1] => New processing loop started.
[!][Preprocessor] => //      ^ or "../import-statement/file.mur",
[?][Preprocessor][6, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][7, 1] => New processing loop started.
[!][Preprocessor] => //      ^ or "./../import-statement/file.mur",
[?][Preprocessor][7, 1] => A single line comment has been detected!
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][8, 1] => New processing loop started.
[!][Preprocessor] => setsize int 0;
[?][Preprocessor][8, 1] => Checking for preprocessor methods...
[?][Preprocessor][8, 1] => A 'setsize' statement has been detected!
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][9, 1] => New processing loop started.
[!][Preprocessor] => define MY_VAR 1;
[?][Preprocessor][9, 1] => Checking for preprocessor methods...
[?][Preprocessor][9, 1] => A 'define' statement has been detected!
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][10, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][11, 1] => New processing loop started.
[!][Preprocessor] => group test {
[?][Preprocessor][11, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][12, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][13, 5] => New processing loop started.
[!][Preprocessor] => class Program {
[?][Preprocessor][13, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][14, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][15, 9] => New processing loop started.
[!][Preprocessor] => function::int Main(){
[?][Preprocessor][15, 9] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][16, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][17, 13] => New processing loop started.
[!][Preprocessor] => int a = MyExtras.ExitCodes.GetSuccessCode();
[?][Preprocessor][17, 13] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][18, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][19, 13] => New processing loop started.
[!][Preprocessor] => return a;
[?][Preprocessor][19, 13] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][20, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][21, 9] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][21, 9] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][22, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][23, 5] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][23, 5] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][24, 1] => New processing loop started.
[!][Preprocessor] => 
[?][Preprocessor] => Getting the content of the next line...
[?][Preprocessor] => Last line detected!
[?][Preprocessor] => The line variable content changed successfully!
[?][Preprocessor][25, 1] => New processing loop started.
[!][Preprocessor] => }
[?][Preprocessor][25, 1] => Checking for preprocessor methods...
[?][Preprocessor] => Inserted the filtered code into the temporary output file.
[?][Preprocessor] => Getting the content of the next line...
[?][Compiler Manager] => Closed all files sessions.
[?][Compiler Manager] => Closed the current workstation.
[?][Compiler Manager] => Task finished successfully! (Ending process)
